(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    221791,       4664]
NotebookOptionsPosition[    216971,       4509]
NotebookOutlinePosition[    217522,       4531]
CellTagsIndexPosition[    217479,       4528]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"TwoAxisPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"f_", ",", "g_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x_", ",", "x1_", ",", "x2_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "fgraph", ",", "ggraph", ",", "frange", ",", "grange", ",", "fticks", 
       ",", "gticks"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"fgraph", ",", "ggraph"}], "}"}], "=", 
       RowBox[{"MapIndexed", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Plot", "[", 
           RowBox[{"#", ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "x1", ",", "x2"}], "}"}], ",", 
            RowBox[{"Axes", "\[Rule]", "True"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{
              RowBox[{"ColorData", "[", "1", "]"}], "[", 
              RowBox[{"#2", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"f", ",", "g"}], "}"}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"frange", ",", "grange"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"PlotRange", "/.", 
            RowBox[{"AbsoluteOptions", "[", 
             RowBox[{"#", ",", "PlotRange"}], "]"}]}], ")"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{"fgraph", ",", "ggraph"}], "}"}]}]}], ";", 
      RowBox[{"fticks", "=", 
       RowBox[{"N", "@", 
        RowBox[{"FindDivisions", "[", 
         RowBox[{"frange", ",", "5"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"gticks", "=", 
       RowBox[{"Quiet", "@", 
        RowBox[{"Transpose", "@", 
         RowBox[{"{", 
          RowBox[{"fticks", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"ToString", "[", 
              RowBox[{
               RowBox[{"NumberForm", "[", 
                RowBox[{"#", ",", "2"}], "]"}], ",", "StandardForm"}], "]"}], 
             "&"}], "/@", 
            RowBox[{"Rescale", "[", 
             RowBox[{"fticks", ",", "frange", ",", "grange"}], "]"}]}]}], 
          "}"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{"fgraph", ",", 
        RowBox[{"ggraph", "/.", 
         RowBox[{
          RowBox[{"Graphics", "[", 
           RowBox[{"graph_", ",", "s___"}], "]"}], "\[RuleDelayed]", 
          RowBox[{"Graphics", "[", 
           RowBox[{
            RowBox[{"GeometricTransformation", "[", 
             RowBox[{"graph", ",", 
              RowBox[{"RescalingTransform", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}], ",", "grange"}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}], ",", "frange"}], "}"}]}], 
               "]"}]}], "]"}], ",", "s"}], "]"}]}]}], ",", 
        RowBox[{"Axes", "\[Rule]", "False"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"ColorData", "[", "1", "]"}], "/@", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2"}], "}"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"FrameTicks", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"fticks", ",", "gticks"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
       "]"}]}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.697921852210971*^9, 3.6979218524055862`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.698319207248934*^9, 3.698319211841289*^9}}],

Cell[CellGroupData[{

Cell["Practica 1 Redes neuronales", "Title",
 CellChangeTimes->{{3.696864523813095*^9, 3.696864534284996*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<PhysicalConstants`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.696884354853047*^9, 3.6968843639976892`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "General","obspkg",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"PhysicalConstants`\\\\\\\"\\\"}]\\) is now \
obsolete. The legacy version being loaded may conflict with current \
functionality. See the Compatibility Guide for updating information.\"",2,6,1,
   26797140356002221886,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.696884365115582*^9, 3.6983179609433804`*^9}],

Cell[BoxData[
 TemplateBox[{
  "BoltzmannConstant","shdw",
   "\"Symbol \\!\\(\\*RowBox[{\\\"\\\\\\\"BoltzmannConstant\\\\\\\"\\\"}]\\) \
appears in multiple contexts \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"PhysicalConstants`\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Notebook$$11$317803`\\\\\\\"\\\"}], \\\"}\\\"}]\\); definitions \
in context \\!\\(\\*RowBox[{\\\"\\\\\\\"PhysicalConstants`\\\\\\\"\\\"}]\\) \
may shadow or be shadowed by other definitions.\"",2,6,2,26797140356002221886,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.696884365115582*^9, 3.6983179610922318`*^9}],

Cell[BoxData[
 TemplateBox[{
  "ElectronCharge","shdw",
   "\"Symbol \\!\\(\\*RowBox[{\\\"\\\\\\\"ElectronCharge\\\\\\\"\\\"}]\\) \
appears in multiple contexts \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"PhysicalConstants`\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Notebook$$11$317803`\\\\\\\"\\\"}], \\\"}\\\"}]\\); definitions \
in context \\!\\(\\*RowBox[{\\\"\\\\\\\"PhysicalConstants`\\\\\\\"\\\"}]\\) \
may shadow or be shadowed by other definitions.\"",2,6,3,26797140356002221886,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.696884365115582*^9, 3.6983179611131077`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Temperature", " ", "=", " ", 
   RowBox[{"273", "+", "20"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6968844273566923`*^9, 3.696884440765493*^9}, {
  3.698317942064431*^9, 3.698317943457469*^9}}],

Cell[CellGroupData[{

Cell["Ejercicio 1:", "Chapter",
 CellChangeTimes->{{3.696864536441696*^9, 3.6968645396692343`*^9}, {
  3.696864597066787*^9, 3.696864598447609*^9}}],

Cell["\<\
Usando la ecuacion de Nerst, determinar los potenciales de equilibrio para \
los siguientes  iones
\
\>", "Text",
 CellChangeTimes->{{3.696864599986167*^9, 3.6968646463782053`*^9}}],

Cell["Defino la ecuaci\[OAcute]n de Nerst", "Text",
 CellChangeTimes->{{3.696885357317388*^9, 3.696885372899796*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BoltzConst", " ", "=", " ", 
   RowBox[{"8.6", "*", 
    RowBox[{"10", "^", 
     RowBox[{"-", "5"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.698317996945153*^9, 3.698318018087268*^9}}],

Cell[BoxData["0.000086`"], "Output",
 CellChangeTimes->{{3.698318009659918*^9, 3.698318015917625*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"VEquil", "[", 
   RowBox[{"cOut_", ",", "cIn_"}], "]"}], ":=", 
  RowBox[{"N", "[", " ", 
   RowBox[{
    RowBox[{"BoltzConst", "*", "Temperature", " ", 
     RowBox[{"Log", "[", 
      RowBox[{"cOut", "/", "cIn"}], "]"}]}], ",", "2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6968646595334263`*^9, 3.696864685716567*^9}, 
   3.6968842672014303`*^9, {3.696884376351913*^9, 3.696884385019597*^9}, {
   3.696884422734955*^9, 3.696884469804605*^9}, {3.696885238151207*^9, 
   3.69688524246673*^9}, {3.696885297055954*^9, 3.6968853003177958`*^9}, {
   3.698318019872635*^9, 3.698318027617321*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"values", "=", 
   RowBox[{"Association", "[", 
    RowBox[{
     RowBox[{"\"\<K\>\"", "->", 
      RowBox[{"{", 
       RowBox[{"430", ",", "20"}], "}"}]}], ",", 
     RowBox[{"\"\<Na\>\"", "->", 
      RowBox[{"{", 
       RowBox[{"50", ",", "440"}], "}"}]}], ",", 
     RowBox[{"\"\<Cl\>\"", "->", 
      RowBox[{"{", 
       RowBox[{"65", ",", "550"}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.696865738259182*^9, 3.696865738724461*^9}, {
   3.696884541659567*^9, 3.696884688266067*^9}, {3.696884799545878*^9, 
   3.6968848160099907`*^9}, 3.696884910206867*^9, {3.696885141618516*^9, 
   3.696885148032783*^9}, {3.6968851805740767`*^9, 3.696885181269641*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"VEquil", "[", 
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ")"}], "&"}], "/@", 
  "values"}]], "Input",
 CellChangeTimes->{{3.696884911738831*^9, 3.6968849528324947`*^9}, {
  3.696885011468643*^9, 3.696885022902061*^9}, {3.6968851882666492`*^9, 
  3.696885188344121*^9}, {3.696885265230383*^9, 3.696885341413107*^9}}],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"K\"\>", "\[Rule]", "0.07730879785949689`"}], ",", 
   RowBox[{"\<\"Na\"\>", "\[Rule]", 
    RowBox[{"-", "0.05479939387795789`"}]}], ",", 
   RowBox[{"\<\"Cl\"\>", "\[Rule]", 
    RowBox[{"-", "0.0538111103479215`"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.696885307564575*^9, 3.6968853419680567`*^9}, 
   3.698317953907238*^9, 3.698318032408043*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 2", "Chapter",
 CellChangeTimes->{{3.6968657463603477`*^9, 3.696865749920372*^9}, 
   3.6983180545809927`*^9}],

Cell[TextData[{
 "Considerar una neurona esf\[EAcute]rica con un radio de 15 micrones y una \
capacitancia de ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", 
    RowBox[{"\.16F", "/", 
     SuperscriptBox["cm", "2"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". Que cantidad de iones de sodio deben ingresar a la neurona para cambiar \
el potencial de membrana en 100 mV? Comparar el cambio de \
concentraci\[OAcute]n con la concentraci\[OAcute]n de iones de sodio del \
problema anterior. Ayuda: usar como valor de la constante de Faraday: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"F", "=", 
    SuperscriptBox["10", "5"], " "}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "Coulombs/mol"
}], "Text",
 CellChangeTimes->{{3.69832589887684*^9, 3.69832595353436*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"r", ",", "C", ",", "V", ",", "F", ",", "A"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", " ", "=", " ", "15*^-3"}], ";", "\[IndentingNewLine]", 
    RowBox[{"C", "=", 
     RowBox[{"1*^-3", "/", 
      RowBox[{
       RowBox[{"(", "1*^-2", ")"}], "^", "2"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"V", "=", "100*^-3"}], ";", "\[IndentingNewLine]", 
    RowBox[{"F", "=", "1*^5"}], ";", "\[IndentingNewLine]", 
    RowBox[{"A", " ", "=", " ", 
     RowBox[{"4", " ", "*", "Pi", "*", 
      RowBox[{"r", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"n", "=", 
     RowBox[{"N", "[", 
      RowBox[{"C", " ", "V", " ", 
       RowBox[{"A", "/", "F"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.6983180598769627`*^9, 3.698318110820868*^9}, {
  3.6983181595059547`*^9, 3.698318263211331*^9}}],

Cell[BoxData["2.8274333882308136`*^-8"], "Output",
 CellChangeTimes->{{3.698318257813229*^9, 3.698318263855558*^9}}]
}, Open  ]],

Cell["\<\
Este es el valor de concentracion necesario, se ve que es mucho menor que \
\>", "Text",
 CellChangeTimes->{{3.6983259676062*^9, 3.6983260003012733`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 3", "Chapter",
 CellChangeTimes->{{3.696865751162641*^9, 3.696865759391753*^9}, {
  3.696865839496245*^9, 3.696865841853063*^9}}],

Cell["Simular la din\[AAcute]mica de una neurona de Hogdkin-Huxley", "Text",
 CellChangeTimes->{{3.698326295472307*^9, 3.698326303113448*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["a", "m"], "[", "V_", "]"}], ":=", 
    RowBox[{"0.1", 
     FractionBox[
      RowBox[{"(", 
       RowBox[{"V", "+", "40"}], ")"}], 
      RowBox[{"1", "-", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"V", "+", "40"}], "10"]}], "]"}]}]]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["b", "m"], "[", "V_", "]"}], ":=", 
    RowBox[{"4", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"V", "+", "65"}], ")"}]}], "/", "18"}], "]"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["a", "h"], "[", "V_", "]"}], ":=", 
    RowBox[{"0.07", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"V", "+", "65"}], ")"}]}], "/", "20"}], "]"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["b", "h"], "[", "V_", "]"}], ":=", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"V", "+", "35"}], ")"}]}], "/", "10"}], "]"}]}]]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["a", "n"], "[", "V_", "]"}], ":=", 
    RowBox[{"0.01", 
     FractionBox[
      RowBox[{"(", 
       RowBox[{"V", "+", "55"}], ")"}], 
      RowBox[{"1", "-", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"V", "+", "55"}], ")"}]}], "/", "10"}], "]"}]}]]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["b", "n"], "[", "V_", "]"}], ":=", 
    RowBox[{"0.125", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"V", "+", "65"}], ")"}]}], "/", "80"}], 
      "]"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.6968661726395197`*^9, 3.6968662810072403`*^9}, {
  3.6968673602793694`*^9, 3.696867516311562*^9}, {3.698326290675995*^9, 
  3.698326292025948*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["m", "\[Infinity]"], "[", "V_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    SubscriptBox["a", "m"], "[", "V", "]"}], "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubscriptBox["a", "m"], "[", "V", "]"}], "+", 
     RowBox[{
      SubscriptBox["b", "m"], "[", "V", "]"}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["h", "\[Infinity]"], "[", "V_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    SubscriptBox["a", "h"], "[", "V", "]"}], "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubscriptBox["a", "h"], "[", "V", "]"}], "+", 
     RowBox[{
      SubscriptBox["b", "h"], "[", "V", "]"}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["n", "\[Infinity]"], "[", "V_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    SubscriptBox["a", "n"], "[", "V", "]"}], "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubscriptBox["a", "n"], "[", "V", "]"}], "+", 
     RowBox[{
      SubscriptBox["b", "n"], "[", "V", "]"}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["tau", "m"], "[", "V_", "]"}], ":=", 
  RowBox[{"1", "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubscriptBox["a", "m"], "[", "V", "]"}], "+", 
     RowBox[{
      SubscriptBox["b", "m"], "[", "V", "]"}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["tau", "h"], "[", "V_", "]"}], ":=", 
  RowBox[{"1", "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubscriptBox["a", "h"], "[", "V", "]"}], "+", 
     RowBox[{
      SubscriptBox["b", "h"], "[", "V", "]"}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["tau", "n"], "[", "V_", "]"}], ":=", 
  RowBox[{"1", "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubscriptBox["a", "n"], "[", "V", "]"}], "+", 
     RowBox[{
      SubscriptBox["b", "n"], "[", "V", "]"}]}], ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.696867531794262*^9, 3.6968676035514793`*^9}, {
   3.696867919331191*^9, 3.696867960384276*^9}, 3.697921108782415*^9}],

Cell["Inicializo los parametros externos", "Text",
 CellChangeTimes->{{3.696869562211823*^9, 3.696869595507332*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Cap", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["V", "Na"], "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["V", "k"], "=", 
   RowBox[{"-", "77"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["V", "l"], "=", 
   RowBox[{"-", "54.5"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["g", "Na"], "=", "120"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["g", "k"], "=", "36"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["g", "l"], "=", "0.3"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.696867625886833*^9, 3.696867739794393*^9}, {
   3.696868070483827*^9, 3.69686807458359*^9}, {3.696868435781629*^9, 
   3.696868436476368*^9}, {3.696868471358017*^9, 3.696868471611485*^9}, {
   3.696868553481944*^9, 3.696868555461426*^9}, {3.696868919229578*^9, 
   3.696868920476241*^9}, 3.69686932951243*^9, {3.6968696469723682`*^9, 
   3.696869647266572*^9}}],

Cell["\<\
Resuelvo el sistema de ecuaciones diferenciales para diferentes valores de la \
corriente externa, variando en un rango de 2mA a 50mA.\
\>", "Text",
 CellChangeTimes->{{3.696869611474236*^9, 3.696869638428432*^9}, {
  3.6968697980073757`*^9, 3.6968698000110197`*^9}, {3.696889201542465*^9, 
  3.696889225625347*^9}, {3.6968925871857233`*^9, 3.696892587403805*^9}, {
  3.6969358515441313`*^9, 3.696935868253826*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"freqData", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plots", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"res", "=", 
        RowBox[{"NDSolve", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"V", "'"}], "[", "t", "]"}], "==", 
             RowBox[{
              RowBox[{"1", "/", "Cap"}], 
              RowBox[{"(", 
               RowBox[{"Current", "-", 
                RowBox[{
                 SubscriptBox["g", "Na"], " ", 
                 SuperscriptBox[
                  RowBox[{"m", "[", "t", "]"}], "3"], 
                 RowBox[{"h", "[", "t", "]"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"V", "[", "t", "]"}], "-", 
                   SubscriptBox["V", "Na"]}], ")"}]}], "-", 
                RowBox[{
                 SubscriptBox["g", "k"], " ", 
                 SuperscriptBox[
                  RowBox[{"n", "[", "t", "]"}], "4"], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"V", "[", "t", "]"}], "-", 
                   SubscriptBox["V", "k"]}], ")"}]}], "-", 
                RowBox[{
                 SubscriptBox["g", "l"], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"V", "[", "t", "]"}], "-", 
                   SubscriptBox["V", "l"]}], ")"}]}]}], ")"}]}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"m", "'"}], "[", "t", "]"}], "==", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SubscriptBox["m", "\[Infinity]"], "[", 
                 RowBox[{"V", "[", "t", "]"}], "]"}], "-", 
                RowBox[{"m", "[", "t", "]"}]}], ")"}], "/", 
              RowBox[{
               SubscriptBox["tau", "m"], "[", 
               RowBox[{"V", "[", "t", "]"}], "]"}]}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"h", "'"}], "[", "t", "]"}], "==", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SubscriptBox["h", "\[Infinity]"], "[", 
                 RowBox[{"V", "[", "t", "]"}], "]"}], "-", 
                RowBox[{"h", "[", "t", "]"}]}], ")"}], "/", 
              RowBox[{
               SubscriptBox["tau", "h"], "[", 
               RowBox[{"V", "[", "t", "]"}], "]"}]}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"n", "'"}], "[", "t", "]"}], "==", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SubscriptBox["n", "\[Infinity]"], "[", 
                 RowBox[{"V", "[", "t", "]"}], "]"}], "-", 
                RowBox[{"n", "[", "t", "]"}]}], ")"}], "/", 
              RowBox[{
               SubscriptBox["tau", "n"], "[", 
               RowBox[{"V", "[", "t", "]"}], "]"}]}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"V", "[", "0", "]"}], "\[Equal]", " ", 
             RowBox[{"-", "80"}]}], ",", 
            RowBox[{
             RowBox[{"n", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
            RowBox[{
             RowBox[{"h", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
            RowBox[{
             RowBox[{"m", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"V", ",", "m", ",", "h", ",", "n"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "200"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"results", "=", 
        RowBox[{"res", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Vt", " ", "=", " ", 
        RowBox[{"V", "/.", "results"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"data", " ", "=", " ", 
          RowBox[{"Abs", "[", 
           RowBox[{"Fourier", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Vt", "[", "t", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "20", ",", "200", ",", "0.01"}], "}"}]}], 
             "]"}], "]"}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"peaks", "=", 
        RowBox[{"FindPeaks", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Vt", "[", "t", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "20", ",", "200", ",", "0.1"}], "}"}]}], "]"}],
           ",", "10", ",", "0", ",", "0"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "peaks", "]"}], ">", "0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"frequency", "=", " ", 
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Mean", "[", 
              RowBox[{"Differences", "[", 
               RowBox[{"First", "/@", "peaks"}], "]"}], "]"}], "*", "0.1"}], 
            ")"}]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"frequency", "=", "0"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"freqData", ",", 
         RowBox[{"{", 
          RowBox[{"Current", ",", "frequency"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"legend", "=", 
        RowBox[{"\"\<Corriente = \>\"", "<>", 
         RowBox[{"ToString", "[", "Current", "]"}], "<>", 
         "\"\<mA, Frequ = \>\"", "<>", 
         RowBox[{"ToString", "[", "frequency", "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Current", "-", "2"}], ")"}], "/", "0.1"}], ",", "10"}],
            "]"}], "==", " ", "0"}], ",", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"plots", ",", 
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"Vt", "[", "t", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
             RowBox[{"Epilog", "\[Rule]", " ", 
              RowBox[{"{", 
               RowBox[{"Red", ",", 
                RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
                RowBox[{"Point", "[", 
                 RowBox[{"Map", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "*", "0.1"}], "+", "20"}],
                     ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], ",", 
                   "peaks"}], "]"}], "]"}]}], "}"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
             RowBox[{"PlotLegends", "\[Rule]", 
              RowBox[{"Placed", "[", 
               RowBox[{"legend", ",", "Top"}], "]"}]}]}], "]"}]}], "]"}]}], 
        "]"}]}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"p2", " ", "=", " ", 
         RowBox[{"ListLinePlot", "[", 
          RowBox[{"data", ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"2", ",", "20"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1000"}], "}"}]}], "}"}]}]}], "]"}]}], ";"}],
        "*)"}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"Current", ",", "2", ",", "50", ",", "0.1"}], "}"}]}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.696865842981522*^9, 3.696866128199032*^9}, {
   3.69686732936436*^9, 3.696867348436026*^9}, {3.6968677652203007`*^9, 
   3.69686780111106*^9}, {3.696867841603121*^9, 3.696867907287829*^9}, {
   3.696867981434383*^9, 3.696868030347968*^9}, {3.696868089808984*^9, 
   3.6968681455498257`*^9}, {3.69686818440591*^9, 3.696868188320195*^9}, {
   3.6968683700038548`*^9, 3.6968683701547127`*^9}, {3.696868449851347*^9, 
   3.696868451331567*^9}, 3.696868803012245*^9, {3.696869037681019*^9, 
   3.696869129397684*^9}, {3.6968691828216877`*^9, 3.696869183526932*^9}, {
   3.696869248734213*^9, 3.696869250147705*^9}, {3.69686928140022*^9, 
   3.696869301064146*^9}, {3.696869331503902*^9, 3.69686936175261*^9}, {
   3.696869392920866*^9, 3.6968695457089233`*^9}, {3.6968696437835283`*^9, 
   3.6968697730417213`*^9}, {3.696869894730234*^9, 3.696870009932733*^9}, {
   3.696870059850281*^9, 3.6968700626829367`*^9}, {3.6968857224405317`*^9, 
   3.696885734168726*^9}, {3.696885794420125*^9, 3.696885863363826*^9}, {
   3.6968859065491667`*^9, 3.69688591596382*^9}, {3.696885956286515*^9, 
   3.696886047545968*^9}, {3.6968860849315033`*^9, 3.696886097188224*^9}, {
   3.6968861422561274`*^9, 3.6968862028569736`*^9}, {3.696886242505374*^9, 
   3.696886338106127*^9}, {3.6968863684001017`*^9, 3.696886601123953*^9}, {
   3.696887267166555*^9, 3.696887335364439*^9}, {3.696887439843108*^9, 
   3.6968874404170647`*^9}, {3.6968874819938726`*^9, 3.696887486119459*^9}, {
   3.696887520460936*^9, 3.696887525232398*^9}, {3.6968875582327967`*^9, 
   3.696887603945822*^9}, {3.696887669606504*^9, 3.6968877578539743`*^9}, {
   3.69688779723995*^9, 3.69688795159521*^9}, {3.696887987509138*^9, 
   3.6968880218188543`*^9}, {3.696888052457122*^9, 3.696888226539001*^9}, {
   3.696888261216949*^9, 3.696888277276217*^9}, {3.6968883508613253`*^9, 
   3.696888457154454*^9}, {3.696888505118881*^9, 3.6968886146176*^9}, {
   3.6968886621201572`*^9, 3.6968888795118017`*^9}, {3.696889024521598*^9, 
   3.696889112147422*^9}, {3.696889143112193*^9, 3.696889173932292*^9}, {
   3.696889277208767*^9, 3.696889304973526*^9}, {3.696889439654326*^9, 
   3.696889499179432*^9}, {3.696889530889676*^9, 3.696889532577319*^9}, {
   3.696889568436778*^9, 3.696889569854424*^9}, {3.6968896182736273`*^9, 
   3.696889618547287*^9}, {3.696892311498263*^9, 3.6968923117687273`*^9}, {
   3.696892369154501*^9, 3.696892376225878*^9}, {3.696892425170525*^9, 
   3.696892434093772*^9}, 3.6968925015950127`*^9, {3.696892536408737*^9, 
   3.696892536857926*^9}, {3.696892597359262*^9, 3.696892600299994*^9}, {
   3.6968926673208437`*^9, 3.696892684334814*^9}, {3.696893620892239*^9, 
   3.696893708532076*^9}, {3.6968938023584223`*^9, 3.6968938376173887`*^9}, {
   3.696893895693055*^9, 3.696893991182393*^9}, {3.696894039897418*^9, 
   3.696894044970175*^9}, 3.696894106995551*^9, {3.696894194929051*^9, 
   3.696894200447977*^9}, {3.696894254326769*^9, 3.696894320630456*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"freqData", ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", "\[IndentingNewLine]", 
   RowBox[{"\[Rule]", "True"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Corriente[mA]\>\"", ",", "\"\<Frecuencia [kHz]\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.696889329850635*^9, 3.6968893369616547`*^9}, {
   3.6968928869023647`*^9, 3.696892971204564*^9}, {3.6968930045149*^9, 
   3.696893084936507*^9}, {3.6968931291901484`*^9, 3.6968931668849*^9}, {
   3.6968932014839163`*^9, 3.696893268016244*^9}, {3.69693642545056*^9, 
   3.696936425658988*^9}, 3.697921561074181*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011111111111111112`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxd2AlczPkfx/FypUVSoVKULuluOma65j0zzUwXQlo5Q9sSSazayjpWQiKb
W4Uc0bq6L7VyrLO0brFtQqG/FaKykj9+3495POb3mMfDfh7q2at3PXpkjWdH
Tfihh4qKSqOqisqXP9kD+o+a6i+P4t6968uj+u0O//r0+Hbzvj49v93c00vJ
U9yc11vJ66PkqSl5fZU8xc156kred99up69ePyWvv5KnuDlvgJKnoeQNVPI0
ld5ecXO+4ubef5DSx1Pc3KOl5CluzlPcnKet5Clu7tFR8hQ35yluzhus5Clu
7hmi5CluzlPcnDdUyVPc3KP77f7xq6e4OU9xc98fekqe4uYefSVPcXOe4ub6
hil5ipt7DJQ8xc15ipvzDJU8xc09w5U8xc15ipvzRmCB2sbYhm0nhZw3Amkn
gdZzJ4XcWxnBYENw2MA3J4Xc2xthQojsfz00coXc18cIU3qkt28xy2Xvb4TN
8gGje7vnCrmPZ4R+i6t6rZuUyzxjaFf9Gf9vZC7zjGEZvsIrI4k8YwwKStEM
SiHPGMHLxRnb9pJnDPt+Z6x7FZA3EhH9s0L3XSBvJN5++LEu4j55I9HdcfX4
85fkjURF7KrvMrrJG4lBX5885plg3myZYU/jPOaZoEi3fMI5Xh7zTJCQfvrs
MVke80zwz4nyWJ+gPOaZYPy1oFtxP5JniiERj70G/pwn5L6/TJGi6zD7/Lo8
Iff1McVXZhd5ptieoD+r7DB5ptjQ3BRypZQ8M0x7zovuukyeGUb+MWNBxD3y
zPBfwNTHrc3kmaHLz8pyWSd5ZmjG/sEuavnMM8faman8vkPymWcOH/6huNcW
+cwzx03zfTrvHPOZZw6R1uSoauQzzxzD958NSRxPngUWdATPS56Zz/azwKIw
8x7ZkeRZoHhg26S7CeRZoKhBd8fwZPIsEHEttTNhJ3mjUCt/ebw1m7xRWLZl
/v/iisgbBW3rM1rWZ8gbBd/Ly8IaaskbhRqnRSfyH5BniU01sedSW8izxFy7
rMrEdvIsMfVY/4Z1PQqYZ4ngZPXyozoFzLNERHaaxx2jAuaNhqOoMEDTpoB5
o9G2LajvFEEB80YjsTB7Y4GUvNE487PVB4MJ5I1G9pr8qO0zyLNCz8qJdxcv
Is8KJrbL7OziyLNCovZYfmMieVZ4Gd06KWszeVYY/aw+KyqDPGscOGy4S3qU
PGvUHa+xci0kzxqvElX32FeRZw1N1efZ/GryrNGe6Dlr3D3ybKDb+P7pT0/I
s0GowdTgnFfk2aBW2HjxRRd5NvhoGjhZqF7IPBs8Tb0gWqtVyDxbjG1r2fB2
eCHzbGGlUyKOtipkni2u1izouudUyDxbnJXmrvD1Is8WSSUnj+uOJc8OXXsm
/L3ve/LsEPb1Ic8ODY/HpqkuJM8Onmo2tw/HkmeH7n6byrckkmePuAcZoeM2
sbfXs8ecHzplOjvJt8ehrRP8LA+x9w+wR0uhreqMvEL288IeR/xFaqnlzFtp
jzdvJrpfOkcf3x69/gw+ol7DvAJ7xLafPhNZRz32qK0Trj/7iHnN9hivP2IX
WqnPAeZbB3Ye6aQ+B/QaHBQo6l3E+hzQnpOTWKlRxPoc4KDjFSDWLWJ9DtBJ
KcmvNS5ifQ6YGHn93A9WRazPAQHtwgh3PvMKHHD2e89HTSLmVTsgK+I3613+
zGt2wKSvD/NUHDF1l+vQGbOZp+eIgLEqS57NLWI/bxwhdNvuqB5DfY5o8ruQ
uXdZEft6OSLz3vrPL+pzRFBauiBhM/U5YjX/Y0V1JvMKHNHb++nRhIPU54ij
NZtvrz/BvGZHlA5OnppVSn08XJz4P7+zZ6mPh+81t1itu0x9PCQbn9ltdJf6
eLCbw3Noq6c+Hp7+cVjH9Rn18XDetcN/21vq4yGlqiW51wfq4+G43qrNsarF
rI+HnJXPu+ZqFLM+HmIkKzRH6RazPifkxU/2PDa8mPU5wTvzjlmVVTHrc0JH
/YRn4xyZF+AEfbd1d209mBfuhDDjfiGXxMxb6QTziXUmaoHM2+WEafqWPx0L
Zl6BEwRGjn8fDaU+J5Tb2LoXRlCfEyzORyXMi6Y+ZxhP5TevTKA+Z1RM2yvA
r8Xs+88Z6y6Z3whPoT5nbP/6UJ8zbhYN5odnUp8zguMjZh06TH3OKNS7Nn7F
CeYVOKM1Ta3ntVLqc8YQ83OfX9TnjPw1gcWaV6jPBT1nX0v++Rb1uaA48sGX
F+tzQbYfb1FTE/W5IP3M1PPhr6jPBfKiYz0jO6jPBdJ3+36L7aY+FyR/PPnr
QPUS1ucC1eisZlPNEtbngoM3o6xq9EtYnwuWxE27NG14CetzxfBGHl/LsoT1
uSJ6WaT+CXfm8VxxrXf2m7F85gW44r9fH0yJEjMv3BW+V/UzdgYwb6UrZHm5
JXMmMm+XK45MuH89fTr1ucLL3u2fRWHU54qNAVktvvOpzxVD7bt67VhKfXyE
eYp5/66gPj5UJtj5zlpNfXw05pQfPLeR+vioCJ1hb7eT+vjYICie/3s69fGR
uWa538hs6uPjuwTVmAO51MeHOEH9X7NC6uNjmaptWsEf1MeHS5t5lt9l6hPg
7LxVEbeqqU+A538J9H++S30CHAg3tdv2D/UJwJveN7G4ifoEaL1VZPD3C+oT
wCrUZX1GB/UJ8POh86OcPlCfAH10Q1eq9illfQL07Twb5zaglPUJcDvMrTpW
p5T1uWFaTmFC2bBS1ueG18HtgoPmpazPDW+ifR+/smFegBuK3iV1iJyZF+6G
+j/y43d4MG+lG/TW3170WsK8XW7Y1t5VP86feQVumLfD/UL+BOpzw+DXR2z0
p1CfG3STZn1+UZ871tQnJbfPpT535CYL181fRH3u0FrXz9liFfUpbq7PHY2+
KmWCddTnjk9NLhMDU6nPHdkB7mrzt1OfO77+OM+kPncsHb79uvAI9bmDH6TT
Nfck9XmguP620ad86vNASPaOGxcrqc8DtYea13w8T30eOJdivNC1mvo8cKOj
Y9PSm9TnAclNwxcl96nPA5Nm+a/vbqQ+D+yFZ4Tvc+rzQOTiwrSdr6jPA26z
Yvq86KA+T5g/Dbgs+UR9ntCx2+z7ukcZ6/PE5Jil/ioaZazPEyaZ0Vo/DC5j
fZ4IPXDH9ZpBGevzRGekeVSiURnr80Tqh4WWby2YV+CJ0hHBvU15zKv2xJbG
wKt73JjX7IlRE6vvTfdinooXImYL/BukzNPzQtCdrc4/jKE+L3RE1qe3BlGf
F+I2n1pePJn6vDDwbVS2PJT6vODluOqfnPnU5wXejuvTZEuozwt/tQbOfxpP
fV7wLmzJKVtOfV5Yoxe+c1YS9Qmx3mKmscYm6hNiZL9un9PbqE8I7uNQnxA1
69VKxmdRnxCzKrb9opFDfUIMUl/+ujaX+oSIWXwxMr+Q+oSYsLkrbtuf1Ke4
uT4hBuv73u6spj7gwDWnhaG32Nv3B0LSW24Mvke9wNYWo9rVDWVC9s8l4Jix
Vnsz9QMp9nv3LnjJvM9/PXLv0tWWb+jzAR62HVqb/Z55IYBB8oEGC9Vy9vsZ
sKXcLvV433LOWwLsdtX8/Cpnn+/nu3+ruFu7nPNSgOleLfWbhpWzzx9QsT5V
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
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Frecuencia [MHz]\"", TraditionalForm], None}, {
     FormBox["\"Corriente[mA]\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 50.}, {0, 0.11702750146284377`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6968893374596043`*^9, 3.6968923488744087`*^9, 3.696892410075276*^9, 
   3.696892486982691*^9, 3.696892733819989*^9, {3.696892881791905*^9, 
   3.6968929158533707`*^9}, {3.696892950300927*^9, 3.696892972005838*^9}, {
   3.696893009318864*^9, 3.6968930459852543`*^9}, 3.696893085613751*^9, {
   3.696893133495591*^9, 3.696893167369755*^9}, {3.696893207443606*^9, 
   3.696893234343286*^9}, 3.69689326870537*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6968893222546587`*^9, 3.6968893276616087`*^9}}],

Cell["\<\
Se observa que alrededor de 7.6 mA comienzan a aparecer spikes con una \
determinada frecuencia y a medida que se continua aumentando la corriente \
externa dicha frecuencia aumenta.

\
\>", "Text",
 CellChangeTimes->{{3.696869811763536*^9, 3.696869835368938*^9}, {
   3.696885739135343*^9, 3.696885747470742*^9}, 3.696893419258593*^9, {
   3.6968934698531303`*^9, 3.696893532935246*^9}, {3.697921037247695*^9, 
   3.6979210574908657`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 4", "Chapter",
 CellChangeTimes->{{3.697921075132313*^9, 3.6979210847778397`*^9}}],

Cell["Fijo la corriente a cero", "Text",
 CellChangeTimes->{{3.6983263333700733`*^9, 3.698326340585081*^9}}],

Cell[BoxData[
 RowBox[{"Current", " ", "=", " ", "0"}]], "Input",
 CellChangeTimes->{{3.6979211377773457`*^9, 3.697921139273573*^9}}],

Cell["Resuelvo el sistema de ecuaciones", "Text",
 CellChangeTimes->{{3.698326345122753*^9, 3.698326355467931*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"res", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"V", "'"}], "[", "t", "]"}], "==", 
        RowBox[{
         RowBox[{"1", "/", "Cap"}], 
         RowBox[{"(", 
          RowBox[{"Current", "-", 
           RowBox[{
            SubscriptBox["g", "Na"], " ", 
            SuperscriptBox[
             RowBox[{"m", "[", "t", "]"}], "3"], 
            RowBox[{"h", "[", "t", "]"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"V", "[", "t", "]"}], "-", 
              SubscriptBox["V", "Na"]}], ")"}]}], "-", 
           RowBox[{
            SubscriptBox["g", "k"], " ", 
            SuperscriptBox[
             RowBox[{"n", "[", "t", "]"}], "4"], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"V", "[", "t", "]"}], "-", 
              SubscriptBox["V", "k"]}], ")"}]}], "-", 
           RowBox[{
            SubscriptBox["g", "l"], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"V", "[", "t", "]"}], "-", 
              SubscriptBox["V", "l"]}], ")"}]}]}], ")"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"m", "'"}], "[", "t", "]"}], "==", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["m", "\[Infinity]"], "[", 
            RowBox[{"V", "[", "t", "]"}], "]"}], "-", 
           RowBox[{"m", "[", "t", "]"}]}], ")"}], "/", 
         RowBox[{
          SubscriptBox["tau", "m"], "[", 
          RowBox[{"V", "[", "t", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"h", "'"}], "[", "t", "]"}], "==", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["h", "\[Infinity]"], "[", 
            RowBox[{"V", "[", "t", "]"}], "]"}], "-", 
           RowBox[{"h", "[", "t", "]"}]}], ")"}], "/", 
         RowBox[{
          SubscriptBox["tau", "h"], "[", 
          RowBox[{"V", "[", "t", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"n", "'"}], "[", "t", "]"}], "==", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["n", "\[Infinity]"], "[", 
            RowBox[{"V", "[", "t", "]"}], "]"}], "-", 
           RowBox[{"n", "[", "t", "]"}]}], ")"}], "/", 
         RowBox[{
          SubscriptBox["tau", "n"], "[", 
          RowBox[{"V", "[", "t", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"V", "[", "0", "]"}], "\[Equal]", " ", 
        RowBox[{"-", "80"}]}], ",", 
       RowBox[{
        RowBox[{"n", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"h", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"m", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"V", ",", "m", ",", "h", ",", "n"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "200"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"VRule", " ", "=", " ", 
   RowBox[{"res", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mRule", " ", "=", " ", 
   RowBox[{"res", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.697921156072003*^9, 3.697921174817542*^9}, {
  3.697921282163542*^9, 3.697921309268029*^9}}],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6979211981647243`*^9, 3.697921204968549*^9}}],

Cell[BoxData[
 TemplateBox[{
  "General","noinfo",
   "\"Input expression \\!\\(\\*TagBox[\\\"InterpolatingFunction[{{0., \
200.}}, <>]\\\", False, Rule[Editable, False], Rule[SelectWithContents, \
True], Rule[Selectable, False]]\\) contains insufficient information to \
interpret the result.\"",2,29,2,26794539658788344848,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.697921200719637*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"V", "[", "s", "]"}], "/.", "VRule"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"s", ",", "0", ",", "100"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6979211804397573`*^9, 3.6979211931440983`*^9}, {
  3.697921225962696*^9, 3.697921271251213*^9}, {3.697922204817973*^9, 
  3.6979222101585617`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwl2Hk8VF8bAHAhCfnJvlW2kCT7zjz2sQxjZuytEkqW7ImoLKVIElFRUiGV
bGmhSyWpVKhEC2WLyhJClvec+/7V5/tx75xznvOc5zk3We9gxm52Nja2CE42
Nvyv3KmFK/lrG0xXJCTWLy0xibvcG9YF+hdQSlINHFeNM4mG6FtFyv63Kf4n
G4dMvjGJJvX9flz+jyjJV+cnuJ4yieaTbdQpv9eUezeebd98kkk8Nzx676ff
V8p/p7eaZskwiRvGQod0bvdQ6Nru38uEmMR4t09BeGkvpUfx383vXEzikCT3
t4lL3yn0sPpTpb8YRE6Oo99o2iCl/194wdmHDKLldPf+Ib9RSrJ1vOSV7Qzi
2Lns52c0xihhstKVsSwGoepP8dS6PUahUDj4Q2wZROiK0wdDS8cp99epLhRq
MYhFK+36sUt/KAd59gZprmQQ4o9jLH6l/aUsprJy62qdCbu6FY4DfkuU2s/n
HO8pORMaS95TomNLlPfxN62z1zoTJ2W2t8obs4HYrvmWFBFnItz7fgTrCRuo
hd2Uv87hTFgOhDyp7lgGp8QHK1710Ilvvz7vjJ7iAJ7oKLWgfDohs3D3woIu
N6z3tZ1NUqATwvm7x0QOcoODe6oddQ2d4KYIWao94oaQXL1yIVE6MZoQNLLN
ZiVM3V4p82QFnajnXG9IuPFAscBtLrYPTsRWvswPR6L5YBOv5mYufyfi1Srd
lZxbBSA/3+9N8glHos1e8FxrrABEvut8EHDIkeg8/lsx94IAZBjRGsz3OxJ9
y69bqn0SgKmBH/caXB2J+QWxBHev1fByoF2+W8aRUPk9O13mIQjFZxP7Ocpp
hLrq+6SoA4LwhHCytr1MI3T3Vgib5woC1wXpkF2ZNMJ8YK/mh05BqKkU7+UJ
pxEeX7oDl7kLgfSJi8QbbRqxTbp2/kWUELwN+zHrq0AjfDyzTmTnCAG7rKf+
XSEaEfLeoWTjByEI1xqKDB93II611vW5uAqDWW28W0exA5HOlxcmEykMj9MO
FNw+60Bk2UWyj5wVhtkNR73FjzgQBU1qMgnvhIG3TpAe5uFAFHHy3rabEoZf
Zz2sWJYORKn5oImIiAgwnQ9TL6k5EDX1BV6lLBFYPZJ2znGZA/Fw/uBweLgI
PE/Umjv3w55oNHQ/QMkSgYMqXUZr39oTrTUCOR3tIvD97vniCxftif5bh9sW
GaJQNJ8pvkPFnhj+uXXn81BRGJJ/eTyBx54YUzEcO5MpCmIuo/6bf9gR89cm
Vm1oEwWp75tNb122I9j7Wy/8GReFs5YVumoH7Qhu+Rsb61eLATxa9fQ8w44Q
Lthly3QWg1u+h0t3zNkSkp8pnWv2i8GKnTfoOi22hIyUtN9QhhhcbZ3IHs22
JRQ9ZqYqysXg366vUto7bImNOR2JcW/EoNii/kXueltC/V25EHVMDHripEav
DVAJXaG0QkEBcfh3lpOvtZBKmJ+yIq47iUPr8dqk2pVUIsGuqqQtSBxkGLIf
L1TZEPXL5c8spInDC8fYmhw3G2KeOB2rfFMc9uooK8SMWxOGsWy+zJficEjv
18GuBGsiWi/Y6dCIOCQLz3qt4LQmaiY+65fwSMA4u/bl6WgrYvKmg1zHBglQ
Jrzj1T9bElp7HvAuUSUgNEkkr2aTJRGqoDK1wV8COJjL6vt9LYjyr+e+sFIk
gHPOMN850Zz4nbeiOf6aBBzZcW9TfoIZoeoaeaf0qQT83adz3NMFiL2r+/Pe
9UnAzneaXK+mTIjil8xENk5JcA9bqTX5xpAYSGkM3CgvCdZqjUtDynqEgoWG
m6u5JPxU2pIWNKxJeC8WwOGdkhD/R7me4FUlLt3jVylLkIRcxTMGvCMyxJfw
OKEPBZLQfvnn6fu67IS0+s/5ZY8kIdZmXm1432rwHPEcUP0iCRq6wtFeVopw
7trz124LkrCp+IatxVUNeL9T/94RaSmY47CTlQzTA5E11wtvGklBbiT3xz/a
xsDqFDnZ6SkF6ysX5e41UCDzTGIER4wULPvt/k9EwAzeOP7ZppYrBeu6zD9M
PzADfh5vqketFBj7Kj7vWjQDh6dvNBI/SIFu8o409QkzSE2gSN2eloLssLa7
HaVm0Gx0i7NLRBpGNvm0eOibAddf6d+cOtKwrOWuw7OrAJYVJz5sZknDW55f
lWlTFDgSOEd4hknDVQmz4sADprD4/cOZ8jvS0OTnKr6w0QiMC6zjut9IAyX+
Qq/ZbgOI8az25RqThm8V0dY30/Xg75tMgy1qa+D17p4L8o+0YKiUO6lSaS1s
u0k4ueoLwO7Nc6s0VslATq/pl9tGeoRDd8pV8bUycEFhq0zAR31CO0XEhG2z
DMSUMAtH9hsSnF/V972my0DWxsrI0GwTojDdryUwSwbibYLtVfrNiK+/OpJL
pWRBOfBElmI6lWjK9V6bqSoLAw6yNpdjbYlbVmPVB0xkIenra4eS/XbEoYu8
/dTtsuBTc/OpUYAD4WubG6seIgtVW2p17gXQCNqUorD4YVlI13KzStzrSEjT
zC0GC2XBsLIrnW0DneCcfd3VWikL209oateeoxMjRVtDa57IwtsS+ZMfF+lE
G31kZf47WZgTdy7o83Am7s9HX04akIVvB8V9Vpc4E4XFXAaBf2Xh/FEOC/ef
zkQqK+sNi1sOQqM1r7spoH7GJudvLCEHx04ZmsgzGIRH2e0leRU5SHEa81kV
xSDA3SSH10gO6pIkNaKzGIQy5wu1P/ZyMFYcu7nqBoMQKHdv6toiB0KckVG/
6hjEjNfA1sZAOfDJG+JSeMkgelaET5UckgPKx8hzGz8wiGeVy9JOn5IDj76T
525/ZRC3tp9SOHBJDvpt/Br0BxhENu+ahzvuyEGh1epNWiMM4tDdUia1UQ4i
lbKr/vxmELt36Y9sbpcD//t3Xz4cZxAO/zUdEeuTA8Jt2rvxD4PQfsCUXJpE
67nUz7NpikFI+/XeGVguD2ZZkUekpxkEp1CwbauoPBwyGywqQf5ZP99TrSQP
b/lU/wwit+9Njb6oLw/cLXWPB5Dvi4oLJNnKQ1Fa+6YK5MLGq9f3ecrDiNGZ
R0zk1CAtCitAHoZT3Hjb0Xihkg3vjWLlofWjvogusmeTY5B8mjywTUkXH55k
EGahn5bz5suD/lfBc/fQfAVa/mp3PZKHG/uP6s+h9cxEJL1seCMP8l++e65A
/ior5FPSKw9ptFfTK8dQvA6onYnmUID0sq7USXSfoW3YPS5qowBPDYUCI38w
iLkTEQ8+uyqAhJeYyNYhBlH8OympyFcBkg2eh1EG0fqrrkloJivA8XZf5Zk+
tD7TITPaUwXgm+Q+bNLDIBRZAZlHLdaDtro4h8p7BsEWv19rjKIICzeftNc/
QuP3Hl6ocVKElwm7HCj1DMLLMvNZ3HZFIPxL+x+i+1TNykov3nhFeA3pR27f
YxD7siaPKtYrQpae9dXQSgbxsSSqY4uxEiyG9beGXmMQFR1xEc/1lcHxffHw
/lQ03yQf72+2yvDOIeld+DEGka9r7/TPUxnuDP0aCE9G8T4nvmFTnDJ0PlHL
2XeEQezaUvkpo0EZgk4PDxvGMAjhviELd7sNsJrmPu2xh0FE/mEKDnqpwMrq
0dPdVgzCSFDlNme8KkyVx+svzToTfv8yL151V4enbwXpNd7ORJbjz8cHdqgD
B8/D+vM7nAnistUwzV8d2u75+h/Z5kyIU2d0p6PU4ce7oTimpzPRnLX1jXWO
Omic6JBfznAmNqgpcwy9Uwfd+KrSEjNnYmRHnb8KUwM6mDvW/SeH3q8SPbXo
qQHTPTpf5GTQ/W5FSHWbtwZwxLuCProPXrgpx34wVAMiw3qn/SSdCYe5lPMv
TmvAncNEULegM3HzDKN13xsN0LZNYAlzOhPBTYNat2masLdEcWPXIJ0goCxA
1VUTppIVbZYN0AmBByFXSrZpgslPOKXSRyfKb88KFgVrwt0xtZKj6D45cY53
4txpTbifWatM/0gnIgM2lx95pwnx9fdZzBd0IlYgStV1qxZY3lpxh/sOnXiZ
auTTvlsLWjwHaFG36cSa5WwX6EFaYJJ/R3PoJrpPzh7jtY/XgtNbl71/U0on
2L7nDVMua8HirchTdUV04mh1ffGGfi1wa3gpuzyXTqR6cq1f2KcNn2n9jxyP
0glTdb7pH+HaUBK1vEr6CJ0YXy747H2sNnDtKiv7mUAn3O+s2VN+UhsSdAZu
ZB6iE+u5dW7uKtOGppbgvukDaP3Vu3RaRrTh4RlpJ5n9dCL8xB6uu3+0gT20
L4s/hE4o7Qz+cOWfNpy+SelZDKKj+9/BA3G8OmC49n1K/z464bUrs059ow5M
dJ6RfOFPJ6YFGqxy9urAxxwhh7876ETpQJNoYqgOvJNsHF6OvPXhy8GQGB2o
i6hKF91OJ574dR63S9UBs5ubBky20onT9aOvFkp0YOvvVW+LPOiE6r61rj4/
dMAD1sW2M+hEj5mCkvO4Djg0n/BmRz4jpjJjMqsDAeflHLSc6cRco06e2Epd
OHCcXfm8E51olqB9aVHWhZ7c3H9HHOjErmcHfTX8dUHo49u3FdZ0wsdY0XE6
WBc0JDphObLvnTc6D6J04fExlTwPKzrhf379cqsUXXDYoMvDbUkngoJfX3G/
pgsxPsodB83oRIyYfG98ny58PN98rt4Y7f/JV82WP9Hza8ZDNyPHLYsuXzmp
C/OnX6gVGtGJhJGX8Wc49GClRyk1zZBOJD+KXHtdTg/2HTg/dkCfTmT6tXi1
7tADC91DnmXadCLrU7jFGX89MF/TNGqIfNZ53Ub3ED244jfu/kKLTpwzCp/r
jUf3FomuwnFNOpH/39rcqXw9EGgX+sPUoBOXEpsT7l9D7x/UWDGuTicuz4b6
x9/Sg0sDpf2nkIu+P9NbWa8H0U8b59s2o/26u/+99Gc9GGZ7ExSkRifKVKXr
e/v0oHP3SLkE8s3LTVev/dSDkypQ0bQJnY8TUhHq83pQ1ZP+cz1yzfanQpZS
+pD2e0Z4diOdqO0I/sctrw9iIjrrK5Dv2Up+f6WiD1/69wzuQ36oFVzhZqgP
D8t1Dg6q0ImGFRLOAR76YPppsWwM9fOBK2p2H3fqw2f+I7YVyHxgaWGzVx8G
UhXaI5Ddo4N15A/qQ9Ip1hV25EPCSWqnj+pD2dGEvhfKaH3leUpLJ/Qh00OJ
Owd5dOipRPcFfVjFWzmiiSyc1C1oe1UfMmZfXeVANpQd5717Ux9+1a/Qe6+E
9sdDejGzXh++jZa3JSCXTWn8ZXumD1aJIh/ckdtO24wFvdYH9e0J1zSR17SE
frPr0Qcp/5DcEUU6Ye57rLt2SB86npbWtCD7s+d3KI7rg/8Ef+YN5PT8yldZ
s/rAlqqlnI5cZfi8iZ3dAIS2tkaEIne9//IohMcAIuQzo9yR2cIma78IGsA/
84kNgGx/Y92N+/IG0Dp/PFMYOcRGp0hZ1QD2DbaaLUPO/m53MVvbAH58PXhm
dD2Kd/yObE4TAwjzGj/6FfmbVOSpUCsD4Ht09r+3yNy1J4710Axgd3m55hNk
Ndblw46uBvD71M4ftcissZqYh9sMILZiaPNt5AMnX4ap+BmAtnkK+3XkfOVv
+84FG8BKngNbLyE/efJ3N1e0AZQ2PjI+jzy8Y9X28AQDKJKmXchBFliQc/92
zACONgtGn0XWzdV3pp82gHeR7C+zkLfoONrV5xqAQueqLPz3I293WagWGsDi
BcWX+P3rgQeM80oNYDTCNAT//suVp3S4Kw0gUcgmFo8/cbVILfKBARzpMvp5
DVnc/L5S32MDaPo7/eAWsumX1zKMlyjeE+KDd5F9YvoliA4DOMdrtqcROVX0
n6DaZwNISuY3bUUurxDgu9BvACuuyuzsRn7nqLic57cBOJaItv5Anhs2Woya
NoDj704lzCLLpDj/7V80gKGAjeE8aD/2PYr90fCfIbwoOLBKHTnTK/PbZnFD
kHsRUGqJXPv3evdFGUOokn0X6YnMod7+6oCGIcwdaD1xHFn55VDToIEh+AlQ
XhQiO/ovPnIxN4TD/waV6pDzLm2o0GAaAvvSFcUpZI3VCdk/wg1BpGry3n6U
n/e5Pyg/izUE0R97JE8jm7OpPShKNIRDR82Yd5BZo91ft2cZAv1Nh+kkcuQr
vQ3vKw2B/4TGmaPofDw8PvqgccIQnmsPfX6CzpvVYWvHS3OGULe5798ocmv0
xZ44diMQtYuvlkLn+auf/XIDQSOYHj3yMxyZ3fq6420NIwhMorOpofNPZd/e
ez7ECH6+zIq5q0on3s5Whx2INoKK/tLTw8ie43xcbglGENG3auVaVF8Ceu6r
CGYYwVh1CE8ycnq9aPix20Zw7XjupAeqTx0xrVwRv43gqpD/dn5U33b8MVF1
3GcMAvP+hZmoXq4SZHvTEW4M6heqON8g31dvDPOKM4aR5bB9FaqvwkHWD/zT
jcE1p2w0Bbl5yNHuaLkxGJruWBurQyfUv2z3r500hvstd8a26tGJz/OyfJQF
Y9CYGmPkIqdK9d1+utwEfIwWDnYg97n7/20TNYGOy1zidqi+n2sPSf6lbwLX
2m+paRqg8/z8cJFcnAmkSmgRf1A/uDloQS1JMoGFxL/+KqhfeHJx/dycbgIP
v56u3IFcZZGqZVJgAujWpvQS2b8+s9GtwQT8f+a556N+86bySs/J5aaw/qPu
ATVT1H/adicK8ZvC20PU2G3IKuNKynmipnC3iHNlOnKiWlnwdSVT6FFyezCC
rF9StdhgawqGYOZ/mYL6Rf5T6b9pptCUuFF+CujEhS2qH1yyTSH6t+V5adT/
zkmeOV2VbwqPeQLPWiCnZ+/gCr1tCgtZpvwZuD+m/xv9+cYUWtgyVsib04kI
B+9S+4+mAIUcydbIITzPfUp7TaHwhmjiHmTf5OyPfhOmIH/fcfEmMuOQxuNv
QhRwKXH6oW5BJ2jG5+LMpCnw+CW7Nx2ZOreod0mBAnucxj2CkU0jX5Zt1aHA
yhTp5hvIG4P8sjtdKXAg9enltah/c267uKc1lwK14xqHfyIvSXEqbCqkQLNK
zwpO1O/nPu79cqKUAuGtOwWlkMdc9Jm2DyiQ++BmlQ3yJ1q78ZNPFOgzZ5ic
R/7Aa/hXrp8CW9omxm4htz2/dOfwLwrcJxpUG5GbrYIUKYtovhZ7KIPIXfmc
3J//AzA8fP77RnTf6FzQ280nDEBfEBkxQn63JaDRSBzgpo55gj3yG8m22DwZ
gHM5r1z3ILceWN71XAE9X/AgNwr5Rae+3qwywPV1BwKTkJuyC8bdNACe/I5v
KUB+MtXmmKIDEO9BcylDbmBxldUYAGhbC4TXIj8UDPQVMQeoYIjvf41cmW7Y
3cYA6P9z4cgMsvd5/uX3XQG2rv2wYZkNnRAs/qZ22ROg46fngZXIIQ2pR4K9
AdzmFoQkkNe1bitz9QW4sHR9hwxya5fme5O9ANeO5borIatOdm3gC0XPV0XT
tJG72W4z/0QAyK2dtTdETl11NK7rAMBC7sAMBdlA0u16QxzAwRM8LlbIQ4ob
3xYfBtjkqrbTDjlHa2nuVBJAwEWRtU7I1tCuEHUcQOBKykkmcpHHwWir02h9
MW6HvZCZvk6FqmcBrDZ5rdyOzB4m/1IoF8DPScfaG/lO/N+puQsAPm9r9Xcj
7zj5Yt23SwDJV2p7/ZD/yy2wfV4EIFqzwnwvcv3VsLDyYgDv2WjPfciBFTYX
c8oA9l7+vDEIWfqR1LND5Wg/6pdqgpFfvBgd210FYHehaj4EOabzsSStFuBH
ePvCfuQN/TmW2g8BTh3VehCK3DkeECRFAGzkKNMJQ05ZpJxjfwJQqiYchK3L
K9z44xnAPFjsxu4XGxp58wJgVYSANHaWwkOR2tcAr5Yzz+Dfs9DIoBS0A4D0
txd4vAkTnz3JHwCm1Y834flcttM/E9gNkMUmlojnS3fjq2N9BZD94b0cr2dp
V8+A0XeAYqqlPV7vrZAqAflBAPW4TFccj61xxwx5RgCe9iko+yPzpW7xGf8N
EPS5jcDxfJCtnt45AaDzNEx2F/LeK5y1j6bR/s99sduBLFHe2XttDs2va8Rk
K3LzwzLe9EWAnMf7/3kgRz1P0IlgNwN1YWqiK7Lie9b2LVxm4C1r/ZGBnDg6
X6HCbwbi23uGcX5ozb/5tFrQDLI0Foqtkb9xX+WaFTEDFS9PXXNkkKN5Pltj
Bmp2rEZ95HnWxWU+m8zANsm/Rh75xs79G+01zGDMZnz5WmTPICsXTR0zIG6b
bxRHrk35VcxmYga8P3fO8SKH3zehX3RA4ymVEuPo/FR7PmP/SDcDeecu42Hk
6Tl6tbALev7X6/RvyAeMfCRPbjUDv1/f7rYhH3qY2hcTZAaB604a3EFOqf8Q
7Z5hBiLyrq/8kJu37dyYlWUGLC19sW3IPEvDn1+fM4PmNzVWLOSTlEVzm8to
vlRBFiBnEAqrdCvMYFocHMWQ8xr3XxbqMIPrhEhYA6pH3d7/mE6dZvB1f2tA
DbI0RxLXiU9mYPXCwPUGcr7FuQD2fjNIW6bPcRb5ypN6nfEpM2gwNWn3Qy5r
4m1pFTOHiIxvw7zIj1quThz3MofSycJYBqqvFeJv9sdtNwcbOZsGG+Qi37mx
kF3m8NdFg9cEOZXdadQtwBwqFV3LlZBZhjMj6w+aw8YYR7sFVL+HS+z6G/LM
Qf6fjUApsvDx0Q+zH81B9A2bJh8y1wcJt1+fkfdfeM6OPKtg+b6n1xxi4mNC
ZlH/+EKc63j2wxy0ND/8HEAumTF7e3bWHD79x3mtEdnUP6tFQ8ICHIse2sQh
a9TU265fYwGF1oUj4cgKnD+axWUt4PjdO5f3Ia+8ZPJsSdkCBA06Lbcgd3wY
ePxK3wJklXgDjJH32BjU7XG3gND8UAYb8m9liad3tlgA5451p2ZQPwzlmX05
u8MCjNYLfx9Djn1V++n4HgtYFq76thc5g6k/XxJjAeuuRDQ/QRbREeecOGQB
HB8rG+qQ80RneA2PWsAX6G6rQb7y8a5UywkLYBPTMSkxw99fekbDFyxArfCC
xilkIzMxC83LFlB5q2D4GDIh99cu5qoFiL2/+OAI8vP+Gk+eWxYgfj77aiTy
pwDdGJVHFuD1/kTudmT2aJ17e3stYNu/wlkd5BQPkYaKfgs4bcCtroHMZzTV
PPfDAmJXfIlTxfNdrOpMnbCAb+452+WRlRO1Z0o5LEGGaNMXRL65W5jtzwpL
uP9lpzI/sqbN5AojPkvIp9er8SAb81SJvRC2BGtJ/3h2ZKcMLb2R9ZZg+F1x
0yS6f3TsF6JoqViCm/C712PI7sw/1gfVLIFN7eixX8jeopWuvHqWIHrNwmgQ
efBv5jamkSXUGC/T6UPe9zHU9zzFEoQvyVj2Ikde0IzcSLUEiUOjl7uR/8UJ
HgpzsASqM2usEzlh+0TSA7olWBUmMd8jH5erOGvvYQn6VrVub/F9qFijOmAv
ev+UKLMZufnjruaCIEuIfS1Oa0Ke5Mnubg+1hPP5Sx5PkO0D55YZH7SEO3bD
Nwg8fr6qSEi8JRzqvDpWj1z4epty0VFLMEmqsqlDntN47Mh30hKuRsxuvI+s
uGtqJ2Qg136orUVmZClFhGdZgu+is9td5NLpE+c/XbCENs6o5irk90r1twQu
W8Kbxdd5lcjsHmMNllctQS9I9lAFsscD1lDZTUtYN7gyqhw58Wfyv547llBM
tzx5G7l8zT1+kRpLyK4j7txC/uQ4Imt73xIsgTl4E5k7YY1OXL0l8I28VsXW
vuNEvdOI4veG50gZ8o5vh736m9DT7J0DN5BPClUFSbywhGNneL2way0HDtNe
W4J59oEvpch9EeJnD7dbQrf0dAi2wHW74uoPlsBv6CKIbdwZ++BHtyWUHdrb
WILst/J265oeSzhax3UYO9Owt9e5zxIGOeZo2PUBQlNJQ5awabvwBuzhC1bc
939awvVP6wWxRVujpH6PWULJ8UVubPOlEjW5KUtICQtahR2k/snMddYSsq5b
rcPO28nvkrpgCQpaLFPspkzwr19mBSfk9+7FnngcenBiuRVIJ7tdwV47VZSu
yGMFG/1/DmHbKX647MlvBbwfZgzxeiLcVlanC1qBQI9DLvalY0bNjaJW0CFU
z4Hj8/JeYPe0pBW85lGIwZ4ZLvitss4Kkr45zmMrSLct2y5vBWo3+VNxvOk0
TpEzSlawEKslj/cj9pCu8rONVrDBJ+0ZdkdPnuNmbSsIapDRwPvLJvhq5y59
Kxj3mpvCVrVYCs8xtoJiV9unOB+OXt11fsnSCo5UpxzB+XLr/dlbWrZWsNpU
LATnU9eK5gY/mhWUBG/xw/mmuVd16LWLFaTu9QitQd52fts/Dk8ruM18mITz
M/VlBr/+Niu4lbC+EOfvN7Up7Uu+VmDjzJrC+X36T93hkCgrsIpRYsPnI6gt
Y+eWg1aQsS6Z0oDscGeXGTXeCkqrEpMakbmCVy6TSbGCs0WvFJ7i9Q6zEl5n
W8H3HSVlLci+vSOH1GqswDYk8zE+v5ZE/TbJ+1ZQ4RG7BZ9v2YLTplz1VnC+
6ePsR5zfW/QWPz+1AprrbrPPyM6dR+LS3lnB4l8XNlw/jF9LxP6ctAIubjX5
CWSJWz+9OmesYO/p25N/kKdPPjJ6Mm8FoyN3m/H30h273f/Oc1qDzMyXqFl8
fpvKY+yFrUFC6uRvNlTfVtfZHCjVsobzj3sUBZAHSiMi/UOt4eTpFMHNyK5r
Fr8UR1pDsMNKFVxvn55KtvkRYw2yaz6DFnJReI743qPWoFgyF6CH7G16735A
ljUs4ztRRUH+8nZ+MajGGn4Zf51xQna0TPK7fd8aqroaZpyR62pWvRmttwal
VYHTTOQL59deDnlmDarXG4bdkD13g0VopzWssbhUjfvBu5mjKRFz1uB+Nfhp
ELJlAN9Y9aI15C6l5YYgV33Ocp9mt4GSspC9ociZjVc3RPHawKF2KjvuL/ST
z15ES9vASrmb3HHIL9fxCsSa2sCIcI5PKq7/mWeiH5rbgL/Ys8UTyDc4pXvn
rW2An2/F2TTk1B+qFXFONrAmL68af19SKx1Z8TtswOSXXVM28hPrzHNHjtiA
11L1ukLkft8Hr2KSbeDm2OiOK8hcKX3sYak2YD/Lyi/C7z/TDdyVaQN2wgWr
ruP52HSbWRbagMWTzPobyL/8OKOMr6H3h+i9Zcj8xzaVaZfaQMQihe0WXk9z
vOj6ChsYppZrliO3UxVGljfaQALr+p4q5El/msziUxtYGiICq83w/SXSZfq5
DShdnw3E/dv1efOjgbc20LDnnXctcpdtYNazXhu4YeG/9iHyN7sak+PLqMCf
PfClEZkj4Gvo4eVUOLh2/OpjZIUT3MUHVlKB44zBHnxf8H3hKbh3NRV6953p
e4o8bL80YCdLhYbAzlvNyLz7lKUt1lNhPY+x+3Nk1ZPOzkYbqJDjNr2AHfTy
yoONGlSoSs80fYE84UDN4DOjgmTdnaxXyEKB+59yWlGB55iHbCuydlre3DyV
CjLdUaXYka9++vyiU0EpRr/iNXLOL5G8fhYVXosNqL9Brl1Fef3ZHblMvgx7
jnbaoHUHFbK5fM69RZYKuh/U5EMFo5D9K9twPqR/v1LvT4UZSYUo7EOtOvy3
Q6gQFpdObUde5tT17VQCFa7H8D3pQG6ud5EPT6SCbqSqxDt8n1J7u8v9GBXO
OJsGYMvwN/fJZFAh3tiN6z3yUJzF+uVZVDhasccJu/xX/e4fOVRgJ1LOYsOr
6oE7BVRo9F0Q/4DMbaKhlH2FCje8d7hivykr84u5ToWdD/ozsHecvDJkfpsK
R6hBC9jK82s3KFWi9X2N3dyJPBaQt4f3LhWazz3Zhp1gf3q4vZ4Knbqi1djU
B3wbaxupsO3Qxk/YAhuPBVxookKceRbbR+TOPI6yhBYqFAV6ymFf4on/6dNK
BbWMRDNs/5g5Vds2KoQYSmzDVh+OCNz0ngrE/Npo7BmP8Zuru6gQ7nfhFDbx
fN/vqc9U+MZzrgj7mMGQWlcvGj9K/C42vWRXcH0/FcBE4Rm2uMTX24U/qPDp
Z0MHds8xz7HkX1Q4LjrzFbt45p16wDgVLti9GsIO8Xfe7zRFhQAJ6ii2fufL
O1qzVLAXCv6DzUalTogtoP1ppk5hN999rDnPZgsbX3RPYmcoUcJ6OG3htZv6
BLZ7zv3KJ9y20HbS8Re2zArdyWI+WzB0NRnAHoq8o50mYAt8lzg+Y5cPqEbs
F7YFe9fit9jRrsXVLuK2sOij+QQbmuSnDaRtQbm2uAqbW7dAd60MGs9I8Ar2
m6uSUewKtvC3O4KM1zmR7LsDSrZwLbHrAPaOpNUzLRtt4ausjTe28tRJ/dub
baGkoJGKPebDfeCMli1wDTM3YSdYLs16GdnCmaz2MXK/q2IMgWILvK2vX5P7
rTAdo2BhC3WfFsqwL3H8+vfTzhasl3i9sf3D/I3fOtrCslVzBtjq37/HVjNs
wVFYVwCbaOxaiPO0BX+Oqrs4/45pupp6b7MFqX6O49j0wreHrL1tYUNVnTt2
z+HmJf69tiDPf+IPznc2s5pllw7YAv8Wuhi2p+VgS2ecLXC3lXzA56fKRjxr
9RFbkFnnm43t7xijeDTVFrL/Kv2H/dbL1N73vC186G/4jc9nYWRTlmodel6y
MxCf7/kDf7fubkDxonqJY7vGKSvlP7WFHJ+nDbge8CSm3vuv1Ra+JAWtxg47
7fhl4ostrPeZKsL1xbLsvdI9NjugcS5cwfUp//aK8XFOO7BSaQPsmQr9+yor
7eCpLv/nFuSye3kOF1bbwS6OB0LYIs+27Y+XswO1Ha9jcD0c6B24b2VpB7Nv
/HVxvTwm9pfWlmKH+pHryXrkrObm740n7KBcfkwZu+BA3oHKU3awVr30Kf4e
q+k2uZqVYwe/zQ4t4XrdX5A473rdDr4ZvQ1/gGyuLHiju8kOxuJm9uD6Pq+/
ibt/uT0Yt/XmVeB8G168+G6lPfzlqDfDFjr/RqtplT2cd1j74w6yykLY9usi
9jCUEmaA7dFwv2bPenso/3Gv5zYe35a6+7elPahP9tndxOfNc1fj36P2IPM3
9lwx7lcFwz3Gx+xh6wVzGnbZ9/1Lh0/awzd6Fzv24L4EY76z9tA4GB+C+9+2
+Is1MtfsocO0zOUaskPRh1LbZnuQb7Oi4n45PLTtefpLe5gW2saDfWzTwGD7
G3toY6e9wv31cc2kwraP9tDaUe6Cbfh8dUHosD0sa7oYgvux8m/7M+f5HOB8
ffTrS8hNmu13egQcYOK8TgG2T5Tnm/UiDuA39ioYu4Btz6ryNQ5w9l2MELao
UHLKEzUH8F1R5VOA89Ft1bWVWg7AurfKCJtxIeuJo54DDFboCWKnrb+y7CPF
AWpYc435yJz6xMFfdAeY09+ohl0Ya5On6eIAEvwzPNjQ0Fob5eEADl0ZQxeR
D9p9nlrm7QDFmxWuYU9smQsWDXOAf5K9KtgZlw+ne0U5AD1Nkh9bbYD75qWD
DpAfojRxAXlvsNiwSqIDaKvkPsTuPaztQznrAIIdtp7YiqL86SG5DlAX2WtB
Pl86ePfyRQcQjZRVw55sy+PlvOYAs5tOcWIb+IXr6JQ6QMZo3dh53A//0bb7
3nKAEq+zn7G5FZZVNtc4wAojyj1sWm3Xp9n7DsAhIliMnelQxbXxkQMES5zM
wZaK8PNMe+YApwdDo7F3rDRLrH/hAOOJX/ZgF12UvDX62gEOGg55Yas1vVrG
6HSA1og2M+wwz+sbj35ygI22d3Swa38nuFT1OIC+rJIK9vwRz/j+PgcYa9Fa
h20mpl0i+sMBGNYfhLGTb6xqt/nlAB1D/LzYLZTB+ehxBxju/7AMm+WfR++e
dYCY0TXjeci582ExfIsO0Dec8wP7SwatyISdBn0KF79hy61Xag3iokHsxU2f
sP3usc0U8NAgjGX7HruM1iX7lp8GzX9+vsEe6620ZxeiQZWnyEtsnci0CC0x
Gugdb3yGHcPjV+AjRYMvcZOPsR/lw/Oz62hw/VURgc2pJfmnSZ4Gj5te1WFT
n/2RnlGigfae4AfYaV6vrDeo0mC26vg97LbRayGe6jQQLJWuxRZNTMg7oU2D
BKryXWwvcc8nD/VpYJ5RVoN9qUzr9y9jGrgfLiHdD6vE15nRoFFqHfm8yrsB
M7oVDQ5vX0X+XvAeIuCwLQ2usYWR41Ut5J6toNHAWNSCnM/s6bBH353RfBxj
yPmaKtJ+CLui9ZWKk+s5cl9RyNqTBiMb1pLrfebIZhK1jQayL1ObsPm+f/Qt
9qbBodPbWrDpUZUZH31pwBGT24p9ljftPk8ADcqTjNqxuwp8+4yCaZBUZdmJ
vU4b+APDaHCEq/oztk+zhH5+FA1G61O+Y/8ee3mCLYEGT6o3j2FrJV2r1kik
Qe4Wzr/Y0RIJX72P0YDnhdoi9jJzLa2nGTQgFhNX4XwRPpPbdfwyDRLrdNWx
ed4JvQ29iuI3KmCAzSaW/syrhAYCC+rm2L/yjlRtukODryeNXbCbCgPS3xI0
+FPoegg7usLEXKKHBmlvKN3YQZN39dn7aPBehBjE9tHV3DwySIMP9wInsZ3v
K0rXjdLg7qIdPz6vKo3/Te9YokHvpW/k+f78trekeK0jvEixqMbuENpy6bSc
I0ww/j7GbnF5nx2j6Aj7KM1t2DUfW446qDnCOtW6MeyM3sqtYyaOMCX3bhOu
N+bjSav1tzqC6tyLG9jXBFQOPDvvCNN/vW7nk/XIY4bzkiO8XMvdgH33wfEo
8yJHoB6/04bd7Psjoq7MEbh5Zqewhx8Wh1bWOYKOCdUY189Ne5T2FXx1BJmU
hSay3jYobI+Sd4LLlT9acT02zmF9qVJyApNjN75gP92XuHVioxNkTDF+Y78X
6/MK1HaCP0tOqy4j/w284r7Lygn2RE3bYhtKyjGc/JzA8FZ2HXbjqPPbkwFO
0JB14AW2/dPD9JZgJ7gdbPQRe0tIr6NVtBMQ7FsmsQ81XbI3Ou4ExktsG3B/
aQhdZ6V0wwnWL798AntuajRD+rYTwI/UbGztA8Sn1ZVO0N7GuoxdHL8zfP6+
E1hdSq7Bzjh55crbFiegNG/9it3yX/hoU6sT2M3BD2zOM5ZGD9vQ+HIcf7Cj
c/vbrnU5wW9XBS7c73ZcU2KPHXYCZ4cuFey8DTO0/b+doEajWgu7o6w513fC
CVJWBRtjUyv3aDjPoXgUx9OwxXtc1IWW04EZKByEvfQzZ/uQMB26ovhKsC+o
JSz/LkoHu/fvb2Prh/jf+CxOh1nVhBrs0D/6f9uk6SD2OPgx9sDsx/Q6BTo4
ZzZ2Yx81atSuVaRDfUViL7ZMXGlXhTId9r1YP4jtyXZQsViVDuMruCawW7mk
6zO16VD0mM6F+30AldMnTZcOFdMivNjcqT9XHtOng//Gh/9hm6+qc4kzpsPz
3Bvi2F8dr/6LMqVDRPukNHZsRtrlUKDDM/51stg1Qtt++VnSwTtVdAM208X6
jLc1HUpbvqtij2WrGWyl0iGXL1MdW0VyKZHhQIfAs6f1sPNlLkmbsOjgQ11j
ic2fqtG8yZUOelOD1tjxfxrD1rrT4W5fji32jqb+liUvtP4T1x2x32yOihzb
SgdLixXO2Ga53HK92+kQbeLAxJbbt/FA4y46DMwmuWFnvnuoULmbDrIPYzyw
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
P3lL9687fH1yhfSt8pC/S0vuME45Qvp/kcCYVw==
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.697922210947942*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
ASCPqYQ=
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Input",
 CellChangeTimes->{3.697922207307975*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
ASCPqYQ=
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.697922207576733*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"m", "[", "t", "]"}], "/.", "mRule"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "90"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.697921311977827*^9, 3.697921338810894*^9}, {
  3.6979222201018667`*^9, 3.697922220853404*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
lXuxrQIDCYvm8E5EsepD0OvL4oRtNd0v2HHqQ9VENIn4/bUPJbQyvPqQrOEy
cRa79szv29sE9cGuu3fZD/vnLg3JfhF9cCh+GEyMjyvvytOC/frwZeBhKDF+
St0mS3UpffBGWpoe2PNfKX52HMDPF1OIccP+FIRCneX1YWH/ppszdjNnCOsv
Jfy8Ufpee+zSJ0+Lr6rpg+L8lx5b7NtW69ocWvpQOz3qboHtEx/oo6mvD4Ui
jmR97CMSNZTdRni8txsLtbB1W5YzXEz1gdlX4o4yNse2cy3XrPSB5nXU4f3Y
2+8+duQ6rA+R7AsCRH7Mqi38KrHTh/2rZTHsRPz8vQV6j+sDh1GPFhV2yd6S
J27uOF6F2xLWcb7dKp0y/eOhD6rBYhFEPnpNnrzI46cPs8emnYaw2Rxcek+E
6MN988q9pdgUa/c91sL1QST8Y9kDIp9vfv13/ao+uM5K/0vFftHlIPk4Th/Y
ajbLL2Gf0j0cuZ6hD2LUt1J1sK1HbnIl3NWHXduNPsljawX3lQtk4/k7UHwW
wWaqsRjWL9SHY22/mKixn0qYKiXV6MP2oeGI13j/MjJpT4r06YN/vdotVeza
EQlTsz0G8IYt9j4Frh9Rq7dnOhkN4MzbWO0ZXI+sGHfGm7MYAMlF4OUH7Dn0
o4PMbQADdepexP8zRe/lmFuJG0DTSFaJHXaKI4/VEX0D0G2c6i3D9e/0pz12
LsEGIKXtbm2J66PKUtDf0TADMJByPKaBTU03k+EaaQAmlSJeYtjZqu8+u103
gGWXnYl/cX39mB7lePK2Afz7Gciag613eMvZq9oAykbKnyzj+s3Xt3AyYNYA
Bs1q7hD1XujwDl7dRQOYbg67mogt9om1l2HZAF600kdfxD4woqZRuGEAh8qv
fyVhw0wk49AuQ2Dp+Dj2B/cTV0rOOm0JQ7AUH2y3wPa4JulDL2MIgtefZmti
e9FpCX8+aAiRXwSyxLH9GV3j/VUNwbpx7O827CieR8fzjQyBUSDtbBXuVwUK
2nR7ThrCtH1blgB2SY3V80FPQ0i51TBAj/1Y7YR/no8hLNrQqW1S4XoH17+g
AEMQeq4W8gm7zbS/4uxVQ5A+rTufhj3ndsr+Y44haEaqm7JjL/24zPgw3xC6
7/Dy02KveCa8PlNsCNeHtQXWcH/d8qs8sKvSECZTEss+YzMGb+7QajIEpebt
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
      "]]}}, {}, {}},
  
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 1.37070136201665*^-7},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.697921328715191*^9, 3.6979213392943573`*^9}, {
  3.6979222173867817`*^9, 3.697922221333305*^9}}]
}, Open  ]],

Cell["\<\
El sistema alcanza un punto fijo luego de 60ms (un poco antes en realidad, \
pero por seguridad tomo 60ms).\
\>", "Text",
 CellChangeTimes->{{3.697921359630414*^9, 3.697921396612509*^9}, {
  3.697922143937228*^9, 3.697922152089244*^9}, {3.6983263641965933`*^9, 
  3.6983263644737873`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CurrentPulse", "[", "t_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"t", "<", "60"}], ",", "0", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"t", ">", 
       RowBox[{"(", 
        RowBox[{"60", "+", "100"}], ")"}]}], ",", "0", ",", "100"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.697921400327569*^9, 3.6979214569841223`*^9}, {
  3.697922149216835*^9, 3.697922158050589*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"CurrentPulse", "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "400"}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<tiempo[ms]\>\"", ",", "\"\<Corriente[mA/cm^2]\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.697921459345468*^9, 3.697921578290704*^9}, {
  3.697922163017509*^9, 3.697922166792589*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQB2IQrdT/d/E8uYd2DFCwnUNTPjdjvz2Mf7Bi3RKNjPNw
/jGDwnS2jPtw/omeSx5f09/D+Setmne+Sf8P55+aeLvwRTq/A4zvtZfd71m6
PJx/lteMkyXWAM536nc9sNzfAs5P1f/Fa8jrAOf7aqZ+FHN3gfM3XaktPWnh
AeevaE1JeuSJ4M8z8/b/HYXgd82Q0NStRfCTYzbfmXAQwRd58sI5wssTzi/7
HCz0PNoLzs9ZYvX/fw6CnxSq+EaiDsH32/7uqNcCBF+9urNy3RME/wbT/gel
ud5wvrWQ1nqWeh84/xxj1Mmz/Qh+wsfOx9MWIPgtF16Kax5CUt+3ssGX1Reh
vu7mLDExBP9TLufW+2oIvrhv5stCDyT13JpB07qR1P+KyImfg+C3vOpo01iL
4Ivd2rHg414Ef+XJF7t2nUPwbXZKXG2+j+C7JNdmrHmP4AMAa7yOfg==
       "]], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQvWdO0/RgAT8HBjCIdPjUvkL5viCCb+2W0cMciuC3
sGh8VZ+B4K/8qzZj5xJ/OD/996S5SyMC4PzXCXsztIID4fz8Y8+N1/sGwfld
UWyqf3NC4Pzk49VphhlhcP5BdsnA7MgION9QsGHay5IoOD/hs62OX04MnL9w
3lGZ771xcP7mPqvbl4IS4PySXbYBc30S4fz9p5Z+6oxOgvNFOt9f/3kTwc90
t9ybGZEM52+LN7d+NQfBZ6ow3Zn1EMHnsf564tdLBF/035YbXZ8Q/Fn3pzy4
9A3BlztY8kLqN4J/MUJe6jUSHwDM3nJt
       "]], LineBox[CompressedData["
1:eJxNz2tMknEcBeAXV7ERroskaayUbsNWgrLYioa5STaWJtnFmq5AjEsgFwFN
5tQa6WCLcllNUlylpukMpXLMmmTpsouhX0S3oM2iuTknFEkh1db+v852dvZ8
PMmCUr4oBsOwzD/9u6nt3lnSiuIM7F+6RSQsgAenHQri9xPBbEI/eYwEzrWk
s+a2gydVcZz0FPCpYwFu5R6wIL7vxGoWWGdN0+3KBls7GA6ZFDw6JRxtUYCD
hMbpCTWYJw/j2JXgMONFDtEMLnDm+x92g+Pf6TfNL4CvBQZrlHoR8udOrU6s
LkEe5l6/VVt7HhmX6/l0tVqMjB18jLNVSJDryKEj7itSZOVpoSt0SYbsq2EW
c25cQCY13PbUt8qR29amVIw0KZCH1FuydnaVIjcn2SgH8pXIg4YwJh4HJ/Pw
v7aeVCH3v6eZpibB5lfL9KRCNXKD5qv07AzYsGHzGmqBBvkBbeXrMi94VRCX
MFRUhtxOf1TV/AVME3TmRORa5OnDA/bjc2D33Yu7ORod8o++PDZ1ERx9qnYY
FXpkHp2bZfgGHilMlcg05cjrhWLnHS24SNwaO64Hf1fH2ZkG8La6UDhyGVxt
f262NIL34Y/2OgbARmJ9jN8J/rDOlZ/4DCymMJeqXOCbjI2Z2WPg4BnvhGcG
nHEuYUfsR7CphF/O8YGpqmHKvVlwnrFDJJ8HW02+Jy0LYL8lkeBe/O9Pk7ln
bwj8xvYSkyyByW3L/KafYEEX6/7bCLinVxmKRsG/AUYh8+I=
       
       "]]}, {}}, {{}, {}, {}}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Corriente[mA/cm^2]\"", TraditionalForm], None}, {
     FormBox["\"tiempo[ms]\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{470.45703125, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 400}, {0., 100.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.697921473170515*^9, 3.697921578720839*^9}, {
  3.697922165053012*^9, 3.697922167303969*^9}}]
}, Open  ]],

Cell["Ahora resuelvo el sitema con este pulso de corriente", "Text",
 CellChangeTimes->{{3.6979215872097387`*^9, 3.6979215964306803`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"res", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"V", "'"}], "[", "t", "]"}], "==", 
        RowBox[{
         RowBox[{"1", "/", "Cap"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"CurrentPulse", "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["g", "Na"], " ", 
            SuperscriptBox[
             RowBox[{"m", "[", "t", "]"}], "3"], 
            RowBox[{"h", "[", "t", "]"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"V", "[", "t", "]"}], "-", 
              SubscriptBox["V", "Na"]}], ")"}]}], "-", 
           RowBox[{
            SubscriptBox["g", "k"], " ", 
            SuperscriptBox[
             RowBox[{"n", "[", "t", "]"}], "4"], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"V", "[", "t", "]"}], "-", 
              SubscriptBox["V", "k"]}], ")"}]}], "-", 
           RowBox[{
            SubscriptBox["g", "l"], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"V", "[", "t", "]"}], "-", 
              SubscriptBox["V", "l"]}], ")"}]}]}], ")"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"m", "'"}], "[", "t", "]"}], "==", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["m", "\[Infinity]"], "[", 
            RowBox[{"V", "[", "t", "]"}], "]"}], "-", 
           RowBox[{"m", "[", "t", "]"}]}], ")"}], "/", 
         RowBox[{
          SubscriptBox["tau", "m"], "[", 
          RowBox[{"V", "[", "t", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"h", "'"}], "[", "t", "]"}], "==", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["h", "\[Infinity]"], "[", 
            RowBox[{"V", "[", "t", "]"}], "]"}], "-", 
           RowBox[{"h", "[", "t", "]"}]}], ")"}], "/", 
         RowBox[{
          SubscriptBox["tau", "h"], "[", 
          RowBox[{"V", "[", "t", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"n", "'"}], "[", "t", "]"}], "==", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["n", "\[Infinity]"], "[", 
            RowBox[{"V", "[", "t", "]"}], "]"}], "-", 
           RowBox[{"n", "[", "t", "]"}]}], ")"}], "/", 
         RowBox[{
          SubscriptBox["tau", "n"], "[", 
          RowBox[{"V", "[", "t", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"V", "[", "0", "]"}], "\[Equal]", " ", 
        RowBox[{"-", "80"}]}], ",", 
       RowBox[{
        RowBox[{"n", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"h", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"m", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"V", ",", "m", ",", "h", ",", "n"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "400"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.697921607693693*^9, 3.697921613350669*^9}, {
  3.6979221716897984`*^9, 3.697922171861133*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TwoAxisPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"V", "[", "t", "]"}], "/.", "res"}], "]"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"CurrentPulse", "[", "t", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "400"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6979216207111483`*^9, 3.697921717130278*^9}, {
  3.697921873152871*^9, 3.697921895971909*^9}, {3.697921940891128*^9, 
  3.697921990381111*^9}, {3.6979221741670713`*^9, 3.6979221742506*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[0.24720000000000014`, 0.24, 0.6], AbsoluteThickness[1.6], 
      Opacity[1.], LineBox[CompressedData["
1:eJwBMQLO/SFib1JlAgAAACIAAAACAAAAIo/9o54e4T6oPRL6/v9TwLcIKR9t
aL8/VgijNQbFU8DBeK6kKGjPP9X/Q6kujFPAxjBxZwZo3z95lMaUkyBTwHwV
/7j/oOM/HSlC7KntUsCWkkU+/I3nP/Fu2AGVvFLAyIzSSPVn7z8cjvaHol9S
wPCEDOd4qvE/pJ/Zb6IzUsB9w68p96DzP6EOF+YxCVLAlkD2rvON9z9zk14a
vbhRwMk6g7nsZ/8//CnZ37gnUcCrPBN+Na8AQEKanLdnBlHA8dtkn3SqAUAf
P20PIuZQwH4aCOLyoANA7c0pQXWoUMCXl05n740HQOzSFNGpNlDAypHbcehn
D0BaUvcdgdBOwIiYlsmTMRBAg4GZ2VqdTsAsaD9aM68QQK6N5XWIaU7AcgeR
e3KqEUBlZSYvlv5NwBXXOQwSKBJAclHgzK7GTcC4puKcsaUSQNn8szyDjE3A
/kU0vvCgE0AN9ECdwA5NwKEV3U6QHhRAjs63TWrJTMBE5YXfL5wUQM7TPDwt
fkzA6LQucM8ZFUBjAZvHWCtMwIuE1wBvlxVAQj473J7OS8AuVICRDhUWQN4Y
FuLCZEvA0iMpIq6SFkDA1pNTE+lKwHXz0bJNEBdA9QCROH5USsAYw3pD7Y0X
QJ6e8oTim0nAu5Ij1IwLGEBPjC9nx6xIwF5izGQsiRhAFc8+BIhmR8ABMnX1
ywYZQK2zOssOi0XAjVRtncJwGUCscFckhhBDwI7ECLc=
       "]], 
      LineBox[CompressedData["
1:eJw92Hk8VN//B3BEJS2UrajsISG7sb0xzGKGO6PssoSPRKWshSRUKgkRIS1k
y5YlstxU+lKWZC+0CCkqoZD8zu2P31/zeD7mce857/f7dc5jHiPpfpTtycXB
wSHDycFBfP5vkiGgd18Cio7ZysTym+IB7rWB+55KgJh7icCoJBn3XuXd4rtW
EoYkQ0yWYym4012h7TEMSegpG2ZfxSxwzOzJscwESShdDT1HrKxw8tixp5Xd
khAx5D7G3M/Cdc7tEG0XlYLAPTNSwiw2riT/8vCYkxSYOp4+97uejUu0hDb+
zZYCm/2tiZ5jbHyLz64tIp+k4Nny3LM3P9n4ar4eLxUFaWiXl1KZnGfji4VR
tRQ/afAfJZk1zbHxaYbqRtcyaRC0y7+Lz7DxD1NDbiFz0mAncsitZ5qN98Zf
rEzQlYHYkhIOj0k23qqiy5sfLgO9dSUhqZ/YeLl/cukAjyx8rSg7q/KGjedu
NuGeockCXV5K/1YPG09/8M12XbwssMYZVoMdbPzMHH2FJCwHK443BnOfsPGA
lN9sawc5yC20qNND9Xhr5+YezpIDTWchrRtVbBwL5bTMkNsFJuyKybo8VO9y
dcayljzMBdL17sWxccEsz+9Cp+Th7ZTZqqIoNr7WaAtZuVEeljbMt0afZOPf
Io98OUBRAItm88yaQ2y8gVuWhNsqQvHzJwcOmbNx5/WJfVEhSlC1qlPt6yIL
b9ugxcvtrArk6sSMC24svMti8/X2MFXgrNghwWvPwvsvTMulZagC6fDCx0yM
hY/y3CMrv1WFwrETu/iAhf9ZFom0c9wLKfedOtdLsHAu/dmN0qf2QgnlzCYr
URa+9mRn5lT6XmhPIk0U8bPwLfPnH0UN7oXn7zVj6zlZuOL0wnyRvRrsC03u
NPyE4apKvTHBoWrgImWX6jOM4Vo+5YImaWqQkOMpWdmH4SZjPmp9/WoQ6F7r
fa8Vw+2H3/hx2qkD81bmFE85hh8Qf/jnRbA6rEvS3rmnCMM9HJIvpqSqw5V1
xo4BuRh+rJeRv7tPHcqrY6kHb2D4+fb60f02GjBx2bLkaSyGx69PPyERpAGB
qox102cwPJkexPXlmgZIL2cPaYdj+M1mZYnIHg0Yb1m/ak8Aht/l5iuhz2nA
6z5P5/6jGF5gMm4gJKQJjSbJcPcwhlc13HQs2KcJU4KpdzIPYnjdn1OTAQGa
8PVxj8QLFwxvItmFGiVrQn20ouRWJwxvr+JP7X6tCd7bY1OF92P4p+IzXX/Z
WqAtvG13ChXDJ786u7Uc14Kqubr8ZjMM/65I+p6UqAXUsWFtEVMM/5M7s0Gh
SwtYXFI8ooYYzvWpPePnDy3wEUpeeK6H4WulC3c3CGhDMZ30X6ouhgvePEiz
ZmnDWtxgMEkTw7cNGfVv99eGwq63Xrg6hkuIif83kaANlSS9ED41DJez/z1X
XqoNtc35jQGqGL47tTs6vFMbNE83jC8po/n1lG6hfteGnT5VCdl70Py2XL69
mV8HAvdF2LgrYbg+69DeIRUd4K3oa4bdaJ5XzPB7VjrgqWNzWE8RwyPpFfld
R3RATPW2oI0ChjfwSCctX9YBq1SPwTh5VB9+NUz+vg70Jt7WGNiF4aQwDi/r
lzpwclbrKiCHaB+1iviiA4uHPffhcqj/M0M6+et0YWS+btAWefY+Q6pbQRd+
cZaFrkZWP/SIb4WqC34VjyJeyGL4cRnFOQVvXXj3wVElF7l05PrwvnO6kBW7
1HINeTp9zf9O5+qCqZhLbBqykk1QWcEzXTBZ/JxSiuwj8Cm9Z1QXzmTYyg4i
5720jubgJkGTrJS9EFpv7FyT325pEvglP7V2Q5Yx3WtrY0ICmYeVqvXI7n9v
whk3EvC67uGTR/Vk12xULIokgXj9noVs5OGA8C19N0nQEKPPvwv1Q1z16x/O
RhKcD4w/WIPs8MVhTGmYBK+eWvHYov5dz23psF0mAbWil3cFWWj7vdv39fTA
aXY6zgf1f1+/0KV+Bz2oK9LVUkLzSUyKDlx1Ug/WWjdlzyJvXOdOtX+oB3ki
0yopaL6rf4lPc2vqw/1Sv25ulAdy+cU+lX36oPZy9ucocpTfIu5wQh/2cTp5
PEP5+fuxL6m0TB+EF2/HRKN8/epM1HVSNoDVrQn4pA7KxyVO6XNMAxge/yhX
h/IYQDm2vtzXAGpWRh0vkFC+65kjawoNoPSsVoKQPoZPFKyNebDLEJRqKv98
QfmW8wo+MmxuCP7cblaJRui8S47Z8noZwpSKi6QaYPi71CeKLncNIcdKo8TZ
GMN3WKsJxj1Bzz8T0PmM7LTx1nLFB0N4X37ztZ8Jhg9ER3SukzSCMUdvGXd0
nkRhqkYTjKDefbLvFbLNkuMdVxcj8Gi6nU4io/uhqvXSxQgjeJz1PDQDuctf
N6gq0wiUsutjfyHz78lzeV9nBIHjR3st0Hm1nBCmrX9rBDW7u6PSkC/diVHT
XjKC3Xmb8t4he6osbti7AeAU3eM/SXMMZ7w5lyO6AyDl0qmrrsga54QMOFQA
7JbpV68ji6vf6R43AuhKk77Rgsw9ourbgQGs/Bka+4n8Na5hVbUbwN9h3xIR
Coa/1mLcyDoO8HKwe68mcu2HAbXYswBKZ+eLGMi34/9r9UsG2MDydzuAHEea
c9ufA9CeTb/qg+w/FrWgXwUwn+oW4Y9sl8h/VeY5QPghH98TyGCYJb++H2D2
0VLWMWT5yd34zwmADwqT9oeQ+VNqbN8sAJDpO947I/82pnxrWmcMJW3DwZbI
I1PdsQVixmBwWdFND7k5zX1HopIx7GmKGJFBLjb7XhlqYAythTfU+ZBTfoQz
3SyNITdNOWsa1RuRyfeJ6mIMAgIeBzqQvWhpYarHjFG+yGX3kZlzcoKiZ4yB
5+St1xeI/jFNTMdvG0NOmu0RfaJ/Cx2D7Q+M4du4sO0W5C93nY9XPTUGStu2
bxNoPrV/Qm7FjBmDvcqmxQRk+6KSFWlFE/CNeZA3gOYNdgapfHomINLqbFaI
LM/9QvmnhQncNH0/H4b823HMucnPBBa4cmUkkVP4tte5lpnAhYFR/mMoXxHV
BdbUJhOw7Y5qNkP2PKjzReW1CUhM+wWII2s8st62MmsC4u4H17ShvL72iQvJ
1DGFD/Ef6/SRa4VF+WNopvBDHF8UQ77dlHPP18EUVFynM/6gvB/f9rhXL8wU
GAXzck3IDs2WR6Qvm4JC9JzwPWTj4295+LJMoSasKOwyMn/rL43BRlM45xJZ
cAD5d2DMy8edpiAQ8OUYDXlEcotH/ntT2N1qmK+J3NyWvZQwYwqY3ZSVNHJx
qHJSyCoyOI6LuW5GTpGtU3QVJEOA661uLuSIV7QmiiwZrvT53JtF59UrvM9e
RYsMkd4yXePITAXPH8IUMuwo92S8RV68GPhoyIYM4aIl5V3IedMxMXe9yHDq
RoRyK7INK8XqcBAZHBYfPGxC5q7I3aoWS4aiZQFaHXK5cPXH39fIwLjE21eF
7BL6/H5jDhkaQjCHcuT1b/uCYyvJ0JZQ0lKMXGs4Ycx8RobPQcriRcjet37z
CfaQ0X3URy1AFuLm7R0cJcNxRyHzfOQmr63Zt2bJcPkV/zrCx1oUfLy5zaDM
4Gcc4R1KJA0VQTPgmsMaiedfxNP/zkmbwZOSy5nE+0N+OPyvTt0Mnn6uFitB
ltt3OPGsqRl07h1TIfbXXXXKiW6NvqdWdVYin9l6SU7goBn41tTO1iArh2V8
7ztuBsIJhxIbkN8OF9VmRZmBuDg1+wlynHF9tGeiGVx+bSXUgqxzt81S6bYZ
GHLETbQjJx2a/lDz2Aw417bFvEGGl3+LIl+ZQWFii+EH5GnlTcGU92agdrFV
/TMyfVaFr4fDHBw5q8t+IXOc9lf/bmQOcRbSqsLE/N+fWa6yMoezxad/bUd2
JCc+D3cxh2gVmSZZ5CreB458p83h4uMtdCI/vsmzZ+UazCFr0DDNGnnbL27L
qTZzaLfz+uyA/NxeSLRiyBxkv4UJuyNL7dQqMl42h7QfJxaPIg/kB3c76VMg
M7065QJy7PrzWdIMCjTr2YZdQdY4et170pECg9HRiteQEzRq/gSfooCT5Oc3
N5ENU1uaDS9SoN4oeugu8peFgQSeGxSYNOi4k49s3rgok1RLgSfa7JPlyLOS
fN/sW5EVr8ZVId+KFquRGKRAFnvWuRbZcnz32fHPFIi4/Gi2HvkPTZ9ZvEAB
q6/7rR4jFxQxRAJ5qcDiXfB7imy7yfm93lYq0BydWM+RuY/7FXIpUIHu5bjY
glzeHR7YokMFLavbh14i58V4uH+gUWF+W0NbO3KWloXVkgMVxDNpPzqRk8f3
6gv6Imu+6elCjrsuqrAnnAqnfwuGdyNH0laEzOOp4CnHmuhBDlr8xOVykwpL
rne39hHzKHz5LbiUCilcslv6kQ86PXib8JgKa9hZvYQdNqS35HdRoe/OPq8B
ZKwhsqrpIxXKxZqeEjY/+t+dN7NUKOHRniWsL2GZMMtDg8D96fOE1V5phG8Q
oUFK24Z2wvJRYj5y8jRoOLgURniHOpetkS4NqqpaVxMWHJ0wtaPTIPjkC19i
/XXXOlT9HWngvy2gjNgvh3nV9jhfGqjq6fT1Is/PZ6y7E06DKRHDd0R9X++d
/fUongYnNvB0EPV/sPMZ7b5JA3PTxpzXyP28rFdTpTSoxXy9iH49O7yjcOdr
GhS9ECvuQK4T57muM0qDEY9aHaLf5W1follzNJT86gpiHlkqNQfOitDh16RX
HDGvoJ/Wm8cd6WBsL/CJuG9975JWVnzp0KlZqk7M332/5FfRCDo8rHKMaiTy
Uj39jJ5NBw4zO5k65F2nLoQWj9IhSIEzq5Loh9Ixr+dz6P2fkjZUEP0YsrF+
t9oCNNKFY4k8chjJ7NmsYAHmb2eTSoh6uBrfBfpZwKY1uzQKkNsf5LTFR1ig
HwROi3nITz0u1d67YgG8HEJtxP1f1myfPFBmAR6FXWk5RL6C4cxMkwU40fFk
4jxkye86wtdtAQmSrzLvEHmKm6UYzFvAoLTPwC0iT3pvNGzWMKD7ahYf4aCv
jyWPijKAqmdtkU3Un5m38bwCAzT6Qq8T583d8spSNokB7gFjM1nIdiuBEzUW
DLgS7+pA2LLUqafLiQF0/vj2TGSym2nTFz8G5HzHrAjrbVYs4T7NgEgft7cZ
RH2cDi1tVxjgydoZTNj1x4WPKdkMUKDobic8865m2aWMAcpL29pvIEd3fhZR
aGJAkE/xBcLC+Fa1mS4GPFMusCKcX0JjPPrIAIvwpJ2E9W+GekXPMoA29fd3
OrFefH4kk4cJXMJn3hB2jRhIFxZmQk18cTPhGT/eyhE5Jtg/FqslHO2s25Gn
zYTqnYxKwiLMQ5/9qUyQNMGrCRfop63Ss2eCqNuux4T1lVq2c/swgXVF49W/
9cQWtNtOMuHDqWvj/9bjU2CnXGTCeOTTVcT+ZhbtfF0ymNDFpSb7r77J87Hy
95ngWhNj8a++wYfZP+qZ8DXVO+hffS0TtbXtTHjkGpjzr74a0Z6zI0zY8Z7S
T7g9j/qN8Z0JiiNRG//183oIrzCnJbhI500G8qH1zuVJjwhYgt365FFyJw2P
Du43yJOyhEqXxg7afVPcb6kjYlra8v//L/o/DhR8OQ==
       "]], 
      LineBox[CompressedData["
1:eJwBUQKu/SFib1JlAgAAACQAAAACAAAAiQSAaWdbT0CscFckhhBDwGA/Zy+V
YU9A0EAG5qj/Q8DyLpdJXnJPQLdgNK+AtUbAhB7HYyeDT0DX5TI5OZhJwBYO
933wk09A6yUsiyN8TMCp/SaYuaRPQHn1qnA76U7APO1WsoK1T0BQc6xuDjZQ
wM7chsxLxk9Asnf5vv6GUMBgzLbmFNdPQJSikWK/lFDA8rvmAN7nT0A32DoB
BYRQwIWrFhun+E9AIJLQpdBmUMCMTaMauARQQOYJ6tRZRFDAHj3TNIEVUEAO
j55+1fFPwOc068HlHVBA9pduoviiT8CwLANPSiZQQPZDcwagUk/AQhwzaRM3
UECtGv5urK5OwGf7kp2lWFBAJYmjsR1fTcCUTuzDeWBQQAQjzKgIEE3AwKFF
6k1oUEAs7AuOssBMwBhI+Db2d1BAT5QwkAMhTMBEm1Fdyn9QQGyk5LJm0EvA
cO6qg56HUEAbLOBE/H5LwMiUXdBGl1BAKZFba2DYSsD057b2Gp9QQLzy5fc6
gkrAIDsQHe+mUEBtABiuUilKwEyOaUPDrlBAeFe6/MXMScB44cJpl7ZQQOng
lihya0nApDQckGu+UEAmfF9L3ANJwNCHdbY/xlBAASulww+USMD82s7cE85Q
QGLUnRlsGUjAKS4oA+jVUECMRENpWZBHwFaBgSm83VBAMpu0K9bzRsCC1NpP
kOVQQLKMVsDJPEbAric0dmTtUEB2bxupAmFFwNp6jZw49VBA2bkrLc9RRMC6
gvuJi/xQQKxwVySGEEPAHpMWLA==
       "]], LineBox[CompressedData["
1:eJwBMQLO/SFib1JlAgAAACIAAAACAAAALEmu1O9zUUCscFckhhBDwMgAfChP
elFATTD2Y+PBRMD0U9VOI4JRQPHQSocs20bAIKcudfeJUUDqIxeu7vVIwEz6
h5vLkVFABveDDoL7SsB4TeHBn5lRQISjpwjSv0zApKA66HOhUUDYM6MBGBRO
wNDzkw5IqVFA+2i1uublTsD8Ru00HLFRQJnm9GDtR0/AKJpGW/C4UUBr6v0I
mV1PwFTtn4HEwFFAl8sajCpGT8CAQPmnmMhRQOnVUj4SFk/ArZNSzmzQUUD7
bB2Q3dhOwNrmq/RA2FFAvrHWMqyUTsAGOgUbFeBRQHHzyZCwTE7AXuC3Z73v
UUC6V8aZYLdNwA4tHQEOD1JA12NYb9mGTMA6gHYn4hZSQLrjeOuhOkzAZtPP
TbYeUkBhVQzkb+5LwL55gppeLlJA9eT+DMFVS8Bvxuczr01SQOr4y9pfHUrA
wECsayxWUkDUM09/yMRJwBC7cKOpXlJA70PD6DVpScBgNTXbJmdSQG1Sgemn
CUnAsK/5EqRvUkAwn8RA2aRIwAAqvkoheFJAt2UaMCg5SMBRpIKCnoBSQPrj
krd0xEfAoh5HuhuJUkArzItB8ENHwPKYC/KYkVJAyj+A7dizRsBCE9ApFppS
QGYC59gZD0bAk42UYZOiUkAzIPu0zE5FwOQHWZkQq1JAC2XLDahpRMA0gh3R
jbNSQGywvDmXU0PAoy/l0Di1UkCscFckhhBDwCNBDCE=
       "]], 
      LineBox[CompressedData["
1:eJwBMQLO/SFib1JlAgAAACIAAAACAAAAgVgWJOtFWECscFckhhBDwL4dxIHh
SVhAgCgZ53/uQ8DBBxlRa1lYQBQn0RuWY0fA5qMuStlhWEC09yAznTxJwAxA
RENHalhAQQeqN9HxSsAy3Fk8tXJYQKGvdC2nXUzAWHhvNSN7WEBLnO96aWJN
wH4UhS6Rg1hAHPvI/cX7TcCksJon/4tYQKkYSgsmPU7AykywIG2UWED41w6S
EEJOwO/oxRnbnFhASML5EeUhTsAUhdsSSaVYQKxRNChj7E3AOiHxC7etWEAa
D6qu+6pNwGC9BgUltlhAZZmYCwtjTcCGWRz+kr5YQJweOdSOF03AHcpy4krg
WEC5ZukUQN5LwEJmiNu46FhAX+Io1USPS8BoAp7UJvFYQBmEt84uQEvAtDrJ
xgICWUBafzuKGqFKwNrW3r9wCllA/5ycjphQSsAAc/S43hJZQBEjGt7z/knA
S6sfq7ojWUDIkrh8L1ZJwHBHNaQoLFlAMVl2qbX9SMCW40qdljRZQM9ya2RV
oUjAvH9glgQ9WUBnWW5N6D9IwOIbdo9yRVlApscIEfzXR8AIuIuI4E1ZQDVx
To65Z0fALlShgU5WWUAzhZ2ww+xGwFTwtnq8XllAtI85GAtkRsB5jMxzKmdZ
QGnKF2iWyUXAnijibJhvWUBvCDEpQxhFwMTE92UGeFlAhaF+VJNJRMDqYA1f
dIBZQOj7M5O7VUPAPK5Ep3iCWUCscFckhhBDwPFK+eA=
       "]], 
      LineBox[CompressedData["
1:eJwBMQLO/SFib1JlAgAAACIAAAACAAAAZLqsOpj4WUCscFckhhBDwCCHUffl
/llAf7wQXjxyRMBGI2fwUwdaQMKs5HybUUbAbL986cEPWkB/vc7gATFIwJJb
kuIvGFpAO63H0/r9ScC496fbnSBaQEFwOk+Pl0vA3pO91AspWkC+ptSE+thM
wAMw0815MVpA7pLITD2uTcAozOjG5zlaQED8gUqUHk7ATmj+v1VCWkB1EgqU
zUJOwHQEFLnDSlpAKud014I1TsCaoCmyMVNaQP8nIfPJCk7AwDw/q59bWkA1
ozhEZc9NwObYVKQNZFpAFRon78SKTcAxEYCW6XRaQCM+AySy9EzAugjXKMd8
WkBDn/NOHqxMwEIALrukhFpArSOf9OliTMBU79vfX5RaQCc7SJ7Oz0vAds03
KdazWkAdZOnX/6dKwP/Ejruzu1pAdnTKJgNdSsCIvOVNkcNaQFWflxsZEUrA
mauTckzTWkApQo+P4XRJwCKj6gQq21pAB8OsbYwjScCqmkGXB+NaQNIrRMow
z0jAvInvu8LyWkAtXwqY1hlIwEWBRk6g+lpAOdZIXoS2R8DOeJ3gfQJbQLg8
A9RhS0fAVnD0clsKW0CJYn0vYtZGwN9nSwU5EltAhj8gRehURsBoX6KXFhpb
QCghyDmfw0XA8Fb5KfQhW0Dxt102TB5FwHlOULzRKVtAOr9O8axfRMACRqdO
rzFbQO3hFPx+gUPA4HHrkhg1W0CscFckhhBDwDqKA9c=
       "]], 
      LineBox[CompressedData["
1:eJwBMQLO/SFib1JlAgAAACIAAAACAAAAllYmQzKrW0CscFckhhBDwI6+FnSI
r1tA6wq75d8ARMAXtm0GZrdbQPy8jB+SvkXAoK3EmEO/W0BsJX1l7X5HwCil
Gyshx1tAK+epAfA2ScCxnHK9/s5bQLe55hM+0ErAOpTJT9zWW0CC2mh7WyxM
wMKLIOK53ltAcY0fj2gxTcBLg3d0l+ZbQAmv+QzF103A1HrOBnXuW0AEJ7EJ
lytOwF1yJZlS9ltAVfe+FadCTsDmaXwrMP5bQPvqFPPlMU7AbmHTvQ0GXEDr
nP3s1whOwPdYKlDrDVxAnrbaOYXRTcCAUIHiyBVcQFmhEOz5kU3ACEjYdKYd
XEDDnsSvvk1NwBo3hplhLVxA7WBfDo++TMCjLt0rPzVcQJVmfed8dUzALCY0
vhw9XECSDzDIDixMwD0V4uLXTFxA3STw1NKYS8Bg8z0sTmxcQLUcBsYkcErA
DRIA0NR0XEBgJejMGx5KwLowwnNbfVxAd+m4pZ7KScAUbka7aI5cQJu996bV
HEnAwYwIX++WXEDDCyQu8cBIwG6rygJ2n1xAl1W9u1JgSMDI6E5Kg7BcQE78
+/wBi0fAdQcR7gm5XEBK2F3oTRJHwCIm05GQwVxAlkTna5GMRsDPRJU1F8pc
QIcq4xQA9kXAfGNX2Z3SXECl0Awyq0lFwCmCGX0k21xA7oaYk0WBRMDWoNsg
q+NcQBAupRoYlUPA4CLCq7LnXECscFckhhBDwCi5BSA=
       "]], 
      LineBox[CompressedData["
1:eJwBIQLe/SFib1JlAgAAACEAAAACAAAA1wM5nNxdXUCscFckhhBDwPlsO7mO
Y11AbeccdHNPRMCmi/1cFWxdQJmcKkiWM0bAU6q/AJx0XUCARIq+bxhIwADJ
gaQifV1ASg39gsTrScCt50NIqYVdQFizYKIcjEvAWgYG7C+OXUAIuZxEWdNM
wAclyI+2ll1A1/1Yaj+sTcC0Q4ozPZ9dQG8Kdn7tHU7AYWJM18OnXUBfj9sZ
8kFOwA6BDntKsF1A7FgODrczTsC7n9Ae0bhdQHONB9XRB07AaL6SwlfBXUBl
e7kGPctNwBXdVGbeyV1As3+eInuFTcDC+xYKZdJdQGvJ/n69Ok3AHDmbUXLj
XUDme6VjkZ5MwNCzo+CMBV5AkY/Jt7xfS8B90mWEEw5eQBAP8jOrD0vAKvEn
KJoWXkAgvYPbPb9KwIQurG+nJ15AHB8P1h4cSsAxTW4TLjBeQO9PPAyYyEnA
3mswt7Q4XkDhlBt0BXNJwDiptP7BSV5AsYOcKbO+SMDlx3aiSFJeQEArJ5b1
XUjAkuY4Rs9aXkANHahYE/dHwD8F++lVY15AYZpbxUiIR8DsI72N3GteQPJ+
dudRD0fAmUJ/MWN0XkCkPM1TP4lGwEZhQdXpfF5AgF7vyz7yRcD0fwN5cIVe
QJYqz2laRUXAoZ7FHPeNXkB8JrPkPHxEwJxcLNdVll5ATROGo92TQ8CXsN3B
VJpeQKxwVySGEEPApvD2rw==
       "]], LineBox[CompressedData["
1:eJwBMQLO/SFib1JlAgAAACIAAAACAAAAP0Hf4dk6YUCscFckhhBDwLiH7agA
PWFAVM4ZqPD+Q8BnlMHS50BhQD3o/vEYuUXAFqGV/M5EYUBvSIHT9nVHwMWt
aSa2SGFAKip/0fIqScB0uj1QnUxhQE6SAJ92wkrAtVrHAtlQYUAWojRPozhM
wPb6ULUUVWFAWXp4Tm9JTcA4m9pnUFlhQIZSEOl87U3AeTtkGoxdYUAoAq0h
gzZOwLrb7czHYWFAYTJfERtATsD8e3d/A2ZhQCySU+J9Ik7APRwBMj9qYUCS
YUtjP+5NwH68iuR6bmFAbEGpCGGtTcC/XBSXtnJhQCp7iUyUZU3AAP2dSfJ2
YUCdKGiYBRpNwII9sa5pf2FAVaC+GOx9TMCHvtd4WJBhQAgGFP0LQUvAyF5h
K5SUYUD5poYgbvFKwAr/6t3PmGFAE2xvT16hSsCMP/5CR6FhQGk9WR6c/knA
zd+H9YKlYUCl0e+HBqtJwA6AEai+qWFAVFgtwDFVScCQwCQNNrJhQKlrL22X
n0jA0WCuv3G2YUBx04xhuD1IwBIBOHKtumFA4hUGv0fVR8BUocEk6b5hQNCT
uHFnZEfAlUFL1yTDYUDFSvGlsOhGwNbh1Ilgx2FA1W0iuAZfRsAYgl48nMth
QJa6s2tew0XAWSLo7tfPYUD9vT8kfhBFwJrCcaET1GFAL0f8yss/RMDbYvtT
T9hhQD/H6/JgSUPAnAGAASLZYUCscFckhhBDwLcTA+4=
       "]], 
      LineBox[CompressedData["
1:eJwBYQKe/SFib1JlAgAAACUAAAACAAAAfmrsTycUYkCscFckhhBDwKzGC8rO
F2JAaK0b2nCnRMDtZpV8ChxiQB0dXtv5iEbALgcfL0YgYkBESH6xJGlIwHCn
qOGBJGJAlH0VvHczSsCxRzKUvShiQAyc3WpCxUvA8ue7RvksYkDt5eikU/pM
wDSIRfk0MWJAyUK48d/BTcB1KM+rcDViQJr9cNB6Jk7AtshYXqw5YkDgfM9/
TkJOwPdo4hDoPWJAVl5gT5svTsA4CWzDI0JiQOx0JIGOAU7Aean1dV9GYkBk
87fpHcRNwLpJfyibSmJANrBuEDF+TcD76Qjb1k5iQJMdnu2kM03APIqSjRJT
YkDoflXHn+ZMwL/KpfKJW2JAK4gulm5JTMCyGNBxfV9iQEAHNkCO/0vApGb6
8HBjYkCjznN4lrVLwIoCT+9Xa2JAOnjeWWEhS8B8UHluS29iQGAXNv7x1krA
b56j7T5zYkA/p+xdC4xKwFQ6+Osle2JAbVoVzbTzScBHiCJrGX9iQIOArtCD
pUnAOtZM6gyDYkB6sEMkVFVJwB9yoejzimJAc91rZ12sSMASwMtn545iQBVR
86zoUUjABA725tqSYkCLxXUbBPJHwPdbIGbOlmJA0Z6gIEGLR8DqqUrlwZpi
QJWRmV3RG0fA3Pd0ZLWeYkDqqET7aKFGwM9Fn+OoomJACEaWgRkZRsDCk8li
nKZiQLx0G68lf0XAtOHz4Y+qYkAAfXLS1c5EwKcvHmGDrmJAownjnGACRMCa
fUjgdrJiQLvXpXAcE0PAH7O2MoCyYkCscFckhhBDwKx/H14=
       "]], 
      LineBox[CompressedData["
1:eJwBMQLO/SFib1JlAgAAACIAAAACAAAA/kKYx3/tYkCscFckhhBDwNEOw1O7
7WJAhEm0UlEqQ8DEXO3SrvFiQLFQHYIw50TAqfhB0ZX5YkCLgTLZAmlIwJxG
bFCJ/WJAl0MRWSEWSsCOlJbPfAFjQHbh/l1LlEvAgeLATnAFY0A+LIGhG8VM
wHQw681jCWNAPcyjNS2XTcBmfhVNVw1jQEkWBMFwDk7AWcw/zEoRY0Ap+IwL
Gj5OwEwaaks+FWNAeSmSBLc8TsA+aJTKMRljQE8tlbCkHE7AMba+SSUdY0Ag
omB2WOpNwCQE6cgYIWNA6d57xICtTcAWUhNIDCVjQJUr2nCjak3ACaA9x/8o
Y0BkofoRXyRNwNTX5sPNOGNAsB3A54b/S8DGJRFDwTxjQIV0OCGPtUvAuXM7
wrRAY0CmZspuhWtLwJ4PkMCbSGNAPK4ZkurWSsBpRzm9aVhjQGiy7Pd7pUnA
7igZxbFcY0A2/2CbfE5JwHIK+cz5YGNAJSn0Blr0SMD369jUQWVjQPTHRFEY
lkjAfM243IlpY0CfMqY0fDJIwAGvmOTRbWNA/9FxOvfHR8CGkHjsGXJjQAPx
BDuMVEfAC3JY9GF2Y0B1FG/mqdVGwJBTOPypemNAHhPHOPlHRsAVNRgE8n5j
QB/CFwwgp0XAmhb4CzqDY0ARGRrZfe1EwB741xOCh2NAyITWr/0TRMCj2bcb
yotjQOEzPy5EEkPAwxRcV9CLY0CscFckhhBDwEMz+98=
       "]], 
      LineBox[CompressedData["
1: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
       "]], 
      LineBox[CompressedData["
1:eJwBIQLe/SFib1JlAgAAACEAAAACAAAALoeY/sorU0CscFckhhBDwOqsoBXk
MlNAzvT0WV3ARMA6J2VNYTtTQIqoJR2vyEbAiqEphd5DU0C44r5P281IwNsb
7rxbTFNAB97JVUa3SsAslrL02FRTQL2GQRGOWkzAfBB3LFZdU0D62qfa2o5N
wMyKO2TTZVNAPXtHFqJHTsAdBQCcUG5TQOjR8VjVmE7Abn/E0812U0DvqXoC
f6NOwL75iAtLf1NAD9w6yhqETsAOdE1DyIdTQNoAo3ZiTU7AX+4Re0WQU0BM
lnBWHwpOwLBo1rLCmFNA0abLjS7ATcAA45rqP6FTQPB1nIi0ck3AUF1fIr2p
U0DFa0FAZCNNwKHXI1o6slNAgeHEEC3TTMBCzKzJNMNTQBVYa+fbMUzAg7W+
qCnlU0AI4LDzfO5KwNQvg+Cm7VNAKRKPk9OcSsAkqkcYJPZTQHsIbDZBSkrA
xJ7Qhx4HVECqbpFycqBJwBQZlb+bD1RAFZUdJ/BHScBlk1n3GBhUQEhU82fq
60jABojiZhMpVEBxVzLHqyRIwFYCp56QMVRAiYCe4E62R8CnfGvWDTpUQJnS
kXnsPUfA+PYvDotCVEBCAAvhi7hGwEhx9EUIS1RA3rG8Y0QiRsCY67h9hVNU
QKfp7+judUXA6WV9tQJcVECUBD3O0axEwDrgQe1/ZFRAH8CvTmy+Q8BfHe0U
q2lUQKxwVySGEEPAFWn7uQ==
       "]], LineBox[CompressedData["
1:eJwBMQLO/SFib1JlAgAAACIAAAACAAAAGOXttf3fVECscFckhhBDwMC1YzXK
61RAU92TieS6RcB0i2kGt/NUQAQsabgaikfAJ2Fv16P7VEBiIz5tbFBJwNo2
daiQA1VAI0h6dOH1SsCODHt5fQtVQIN4U/CJWUzAQeKASmoTVUB1f/N5JmBN
wPS3hhtXG1VAAevcnjQDTsCojYzsQyNVQFDoPoJ2UU7AW2OSvTArVUDiIyGN
42JOwA45mI4dM1VA1YKSR25NTsDCDp5fCjtVQCEtBQPDIE7AdeSjMPdCVUCK
KzTvt+ZNwCi6qQHkSlVAdIfLERelTcDcj6/S0FJVQPcZH5EyX03Aj2W1o71a
VUD7Typo8BZNwPYQwUWXalVA1xszrTuDTMCq5sYWhHJVQEKUXMfFOEzAXbzM
53B6VUAPclWENe5LwMRn2IlKilVAV3PDLfFYS8CRvu/N/alVQJFeggWnKkrA
RJT1nuqxVUDgFq+809xJwPhp+2/XuVVArxLCokyNScBeFQcSsclVQBxpN8nC
5kjAEusM453RVUCdJN35OI5IwMXAErSK2VVADNRMDNowSMAsbB5WZOlVQA39
WAIYYkfA4EEkJ1HxVUBaWzJ9AO1GwJMXKvg9+VVA/hfdjmxrRsBG7S/JKgFW
QKzch5f02UXA+sI1mhcJVkBrGm4bPjRFwK6YO2sEEVZAZfLvHtB0RMBhbkE8
8RhWQCdZOBMOlUPAMg9+Fe4cVkCscFckhhBDwNYt/Bg=
       "]], 
      LineBox[CompressedData["
1:eJwBUQKu/SFib1JlAgAAACQAAAACAAAAsSyFDSOTVkCscFckhhBDwGuFetTO
llZAhIYxunHfQ8Bub8+jWKZWQBZnQZiDWUfAcOR5ix2uVkDEKsKBLRFJwHFZ
JHPitVZA5TyDfkCtSsByzs5ap71WQA6TlMc3EEzAdEN5QmzFVkCz+ojQXR9N
wHa4IyoxzVZAv3aB17DQTcB3Lc4R9tRWQIZ92TYaLk7AeKJ4+brcVkA7eeb1
cUxOwHoXI+F/5FZAAODwF89ATsB8jM3IROxWQOt2v5RFG07AfQF4sAn0VkAY
mDf2aOZNwH52IpjO+1ZAl29IXqqoTcCA68x/kwNXQOfrBIfTZU3AgmB3Z1gL
V0BbPbeqGCBNwIPVIU8dE1dA6QgU5MLYTMCGv3YepyJXQNZhwfT3R0zAiDQh
BmwqV0ADsZ1cL/9LwImpy+0wMldAks64d1S2S8CMkyC9ukFXQPf2N5FgJEvA
kmfKW85gV0BBQJFBdvtJwJTcdEOTaFdANouL95iuScCVUR8rWHBXQFA5hA3Y
X0nAmDt0+uF/V0BW/bXiObpIwJqwHuKmh1dAtI3znsthSMCbJcnJa49XQJLv
+kdEBEjAnJpzsTCXV0A/OspAUaBHwJ4PHpn1nldASY1fJUk0R8CghMiAuqZX
QOOuiuERvkbAoflyaH+uV0Bloghn/jpGwKJuHVBEtldAOJzDvaanRcCk48c3
Cb5XQFS7qFO9/0TAplhyH87FV0AtM8wr8D1EwKfNHAeTzVdAagljXP1bQ8C9
hUUQys9XQKxwVySGEEPA1rEWsw==
       "]], LineBox[CompressedData["
1:eJwBYQKe/SFib1JlAgAAACUAAAACAAAAW1UUMnQQX0CscFckhhBDwFJ+McPi
E19Agk3vOAfOQ8BNPJh9QRxfQIjXoP+1p0XASPr+N6AkX0ADFibEq4RHwEO4
ZfL+LF9AVXurJcpXScA+dsysXTVfQOpiHcaVBUvAOTQzZ7w9X0B0ZuPBU2lM
wDTymSEbRl9AwD8JogFnTcAwsADceU5fQIsPxxWR+03AK25nlthWX0CToxoc
dDpOwCYszlA3X19A7eNaA3w+TsAi6jQLlmdfQFE4RE9OHk7AHaibxfRvX0B0
Jbb1MulNwBhmAoBTeF9AUeyo61yoTcATJGk6soBfQNniv6wMYU3ADuLP9BCJ
X0BKM4MTNBZNwARenWnOmV9A89Btrst7TMD/GwQkLaJfQJ2FWfasLUzA+tlq
3ouqX0Boc2nRYN9LwPBVOFNJu19AuugX/IRCS8DrE58NqMNfQB+xqwDR80rA
5tEFyAbMX0A5Y3uYr6RKwNxN0zzE3F9A3xSgguYDSsDXCzr3IuVfQH22afNl
sUnA0smgsYHtX0CX5TH4v1xJwM2HB2zg9V9AQAzN7DwFScDIRW4mP/5fQDuy
QU/6qUjA4oFq8E4DYEDl6XWX3klIwN/gnU1+B2BAZlbelYjjR8DcP9GqrQtg
QGcR7Zc4dUfA2p4ECN0PYEAco21IsfxGwNj9N2UMFGBAo6C9cQ53RsDVXGvC
OxhgQAhxCAGR4EXA0rueH2scYEDa1nc3YzRFwNAa0nyaIGBAY6lzIWRsRMDO
eQXaySRgQFKj0HgngUPAIM1IBHsmYECscFckhhBDwFkqFI8=
       "]], 
      LineBox[CompressedData["
1:eJwBQQK+/SFib1JlAgAAACMAAAACAAAAYbTY8IxhYECscFckhhBDwHDBioJv
YmBAiSOAPAVyQ8Afzl6sVmZgQB3mW1dpKkXAztoy1j1qYECmbxukG+dGwH3n
BgAlbmBAruM9bm2gSMAs9NopDHJgQApTO31uRErA2wCvU/N1YECuOuW+HLdL
wIoNg33aeWBAfyxTRsDbTMA5GlenwX1gQIv0k0xjo03A6CYr0aiBYEDNdom/
chNOwJcz//qPhWBAMqxu0BI/TsBGQNMkd4lgQBLTsMnsO07A9UynTl6NYEAu
/RoJchtOwKRZe3hFkWBAN5VvFHXpTcBTZk+iLJVgQJclIbhGrU3AAnMjzBOZ
YED64MgmPGtNwGCMyx/ioGBARb3EF5/eTMAcvxvHfrBgQCfBLJ2cu0vAy8vv
8GW0YEAUvpDpe3JLwHrYwxpNuGBAccvAkDwpS8DY8WtuG8BgQG6AGWrUlUrA
lCS8FbjPYEDpXAF62WNJwEMxkD+f02BAEkBFDZcSScDyPWRphtdgQDSattoy
vkjAoUo4k23bYEA+rCLU0WVIwFBXDL1U32BARR4j62UISMD/Y+DmO+NgQM0r
4TefpEfArnC0ECPnYEADW43h1zhHwF19iDoK62BAiXu1NfrCRsAMilxk8e5g
QLHoSWxfQEbAu5YwjtjyYECp2ExBp61FwGqjBLi/9mBAYjD1ho0GRcAZsNjh
pvpgQM2o97TLRUTAyLysC47+YECGIooxK2VDwDIEHYjP/2BArHBXJIYQQ8Cz
Bguh
       "]]}}, {}, {}}, GeometricTransformationBox[{{{{}, {}, 
       {RGBColor[0.6, 0.24, 0.4428931686004542], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQB2IQrdT/d/E8uYd2DFCwnUNTPjdjvz2Mf7Bi3RKNjPNw
/jGDwnS2jPtw/omeSx5f09/D+Setmne+Sf8P55+aeLvwRTq/A4zvtZfd71m6
PJx/lteMkyXWAM536nc9sNzfAs5P1f/Fa8jrAOf7aqZ+FHN3gfM3XaktPWnh
AeevaE1JeuSJ4M8z8/b/HYXgd82Q0NStRfCTYzbfmXAQwRd58sI5wssTzi/7
HCz0PNoLzs9ZYvX/fw6CnxSq+EaiDsH32/7uqNcCBF+9urNy3RME/wbT/gel
ud5wvrWQ1nqWeh84/xxj1Mmz/Qh+wsfOx9MWIPgtF16Kax5CUt+3ssGX1Reh
vu7mLDExBP9TLufW+2oIvrhv5stCDyT13JpB07qR1P+KyImfg+C3vOpo01iL
4Ivd2rHg414Ef+XJF7t2nUPwbXZKXG2+j+C7JNdmrHmP4AMAa7yOfg==
         "]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQvWdO0/RgAT8HBjCIdPjUvkL5viCCb+2W0cMciuC3
sGh8VZ+B4K/8qzZj5xJ/OD/996S5SyMC4PzXCXsztIID4fz8Y8+N1/sGwfld
UWyqf3NC4Pzk49VphhlhcP5BdsnA7MgION9QsGHay5IoOD/hs62OX04MnL9w
3lGZ771xcP7mPqvbl4IS4PySXbYBc30S4fz9p5Z+6oxOgvNFOt9f/3kTwc90
t9ybGZEM52+LN7d+NQfBZ6ow3Zn1EMHnsf564tdLBF/035YbXZ8Q/Fn3pzy4
9A3BlztY8kLqN4J/MUJe6jUSHwDM3nJt
         "]], LineBox[CompressedData["
1:eJxNz2tMknEcBeAXV7ERroskaayUbsNWgrLYioa5STaWJtnFmq5AjEsgFwFN
5tQa6WCLcllNUlylpukMpXLMmmTpsouhX0S3oM2iuTknFEkh1db+v852dvZ8
PMmCUr4oBsOwzD/9u6nt3lnSiuIM7F+6RSQsgAenHQri9xPBbEI/eYwEzrWk
s+a2gydVcZz0FPCpYwFu5R6wIL7vxGoWWGdN0+3KBls7GA6ZFDw6JRxtUYCD
hMbpCTWYJw/j2JXgMONFDtEMLnDm+x92g+Pf6TfNL4CvBQZrlHoR8udOrU6s
LkEe5l6/VVt7HhmX6/l0tVqMjB18jLNVSJDryKEj7itSZOVpoSt0SYbsq2EW
c25cQCY13PbUt8qR29amVIw0KZCH1FuydnaVIjcn2SgH8pXIg4YwJh4HJ/Pw
v7aeVCH3v6eZpibB5lfL9KRCNXKD5qv07AzYsGHzGmqBBvkBbeXrMi94VRCX
MFRUhtxOf1TV/AVME3TmRORa5OnDA/bjc2D33Yu7ORod8o++PDZ1ERx9qnYY
FXpkHp2bZfgGHilMlcg05cjrhWLnHS24SNwaO64Hf1fH2ZkG8La6UDhyGVxt
f262NIL34Y/2OgbARmJ9jN8J/rDOlZ/4DCymMJeqXOCbjI2Z2WPg4BnvhGcG
nHEuYUfsR7CphF/O8YGpqmHKvVlwnrFDJJ8HW02+Jy0LYL8lkeBe/O9Pk7ln
bwj8xvYSkyyByW3L/KafYEEX6/7bCLinVxmKRsG/AUYh8+I=
         
         "]]}, {}}, {{}, {}, {}}}, {}, {}}, {{{1., 0.}, {0., 
     0.4187084386359973}}, {0., -79.99993755132039}}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->False,
  AxesLabel->{None, None},
  AxesOrigin->{0, -79.99993755132039},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->{{
     RGBColor[0.24720000000000014`, 0.24, 0.6], 
     RGBColor[0.6, 0.24, 0.4428931686004542]}, {Automatic, Automatic}},
  FrameTicks->{{{{-80., 
       FormBox[
        RowBox[{"-", "80.`"}], TraditionalForm]}, {-70., 
       FormBox[
        RowBox[{"-", "70.`"}], TraditionalForm]}, {-60., 
       FormBox[
        RowBox[{"-", "60.`"}], TraditionalForm]}, {-50., 
       FormBox[
        RowBox[{"-", "50.`"}], TraditionalForm]}, {-40., 
       FormBox[
        RowBox[{"-", "40.`"}], TraditionalForm]}, {-30., 
       FormBox[
        RowBox[{"-", "30.`"}], TraditionalForm]}}, {{-80., 
       FormBox[
       "\"\\!\\(\\*TagBox[InterpretationBox[\\\"\\\\\\\"-0.00015\\\\\\\"\\\", \
-0.00014914597809934094`, Rule[AutoDelete, True]], \
Function[NumberForm[Slot[1], 2]]]\\)\"", TraditionalForm]}, {-70., 
       FormBox[
       "\"\\!\\(\\*TagBox[InterpretationBox[\\\"\\\\\\\"24.\\\\\\\"\\\", \
23.882818277789198`, Rule[AutoDelete, True]], Function[NumberForm[Slot[1], \
2]]]\\)\"", TraditionalForm]}, {-60., 
       FormBox[
       "\"\\!\\(\\*TagBox[InterpretationBox[\\\"\\\\\\\"48.\\\\\\\"\\\", \
47.765785701556524`, Rule[AutoDelete, True]], Function[NumberForm[Slot[1], \
2]]]\\)\"", TraditionalForm]}, {-50., 
       FormBox[
       "\"\\!\\(\\*TagBox[InterpretationBox[\\\"\\\\\\\"72.\\\\\\\"\\\", \
71.64875312532384`, Rule[AutoDelete, True]], Function[NumberForm[Slot[1], \
2]]]\\)\"", TraditionalForm]}, {-40., 
       FormBox[
       "\"\\!\\(\\*TagBox[InterpretationBox[\\\"\\\\\\\"96.\\\\\\\"\\\", \
95.53172054909116`, Rule[AutoDelete, True]], Function[NumberForm[Slot[1], \
2]]]\\)\"", TraditionalForm]}, {-30., 
       FormBox[
       "\"\\!\\(\\*TagBox[InterpretationBox[\\\"\\\\\\\"120.\\\\\\\"\\\", \
119.41468797285847`, Rule[AutoDelete, True]], Function[NumberForm[Slot[1], \
2]]]\\)\"", TraditionalForm]}}}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{641.15625, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 400}, {-79.99993755132039, -38.129093687720655`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.69792168867021*^9, 3.6979217176279593`*^9}, {
   3.697921931248125*^9, 3.697921990826454*^9}, 3.697922174753866*^9}]
}, Open  ]],

Cell[TextData[{
 "En el grafico de arriba se muestra como evoluciona el sistema luego de \
activar una corriente de 100 ",
 Cell[BoxData[
  FormBox[
   RowBox[{"mA", "/", 
    SuperscriptBox["cm", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " por 100 ms. \nLuego de que se apaga la corriente el sistema deja de emitir \
pulsos y regresa al punto fijo.\n"
}], "Text",
 CellChangeTimes->{{3.697922033251781*^9, 3.697922103400073*^9}, {
   3.697922248800436*^9, 3.6979222577448053`*^9}, 3.6979236871662807`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 5", "Chapter",
 CellChangeTimes->{{3.697923691642747*^9, 3.6979236936113987`*^9}, 
   3.6983184892071857`*^9, 3.698318587649276*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Current", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tau", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["tau", "a"], "=", "1"}], ";"}]}], "Input",
 CellChangeTimes->{{3.698319349767159*^9, 3.698319382012179*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"res", "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"tau", " ", 
        RowBox[{
         SuperscriptBox["V", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", 
       RowBox[{"Current", "-", 
        RowBox[{"A", "[", "t", "]"}], "-", 
        RowBox[{"V", "[", "t", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{
        SubscriptBox["tau", "a"], " ", 
        RowBox[{
         SuperscriptBox["A", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", 
       RowBox[{"-", 
        RowBox[{"A", "[", "t", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"V", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{"A", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"V", ",", "A"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.698318929021707*^9, 3.698318930318658*^9}, {
  3.698319253711835*^9, 3.698319257833247*^9}, {3.698319390743491*^9, 
  3.6983194021138897`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"V", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj4AACDeWCgwPTd0wYnD
3cQ/oIGAyaJtiD/SUFjDa77VP4kl1UUno6c/IqE47Akn4D8R1swMjHa3P9Wb
k3tZVOU/ZG7TADp3wj+7wbiC/fHqPyPk1KgQa8o/gEqXStgX8D8OdpUBagzR
P7tJtw/c7vI/kJBgGJQ01T/ziT6Xnbj1P8U1XDAALtk/2iBupGZS+D+GF5Ri
iLrcP1rNgu1ZJPs/LUDOJRou4D+J0D+8VMb9P/QhGAvpwuE/WwqypoYtAEAF
yAHgAzPjPz63Ng34kwFAk2N8xd2h5D94j482beICQHa3+f4X2uU/f/LaffdM
BEA9U+t87QznPwX2WabgsAVA7PtwDc8b6D/iJK2RzfwGQBVW9v4M/+g/jN7y
ms9kCEBFKd2A09vpP43DDGfVtAlA2f/h76mT6j9bMxlR8CALQAeAhK/AROs/
p0NZHGqGDEAcSU6NUN7rP0t/barn0w1Ajw8E8TJd7D+8RXRWej0PQEyjJ4+2
1uw/wpunYohHEECpr7i5ojrtP+XkrgoD7RBAmzRA4T+R7T9vc69BiKARQI8+
BM3g4+0/pRcaWg9IEkBbTDAshCfuP0EBfgGh/RJAJcn8y7Bn7j8cu3sZ4q8T
QKQpBN6Inu4/oorjEiVWFECHPaToRMvuP4+fRJtyChVAI3hy1J717j8oyg8F
wrIVQLyh1agPGO8/AMV038BXFkC4GX9XoDXvPz4F00jKChdAffiM9ZNR7z8o
W5uT1bEXQIKQt6FBaO8/ePZcbetmGEBGeZHBmn3vP3SniCgDEBlAKbbdyuGO
7z+vKE5UyrUZQHErAVKlne8/Ue8MD5xpGkBOx5PziKvvP5/LNatvERtA/7lk
AMK27z9T7VfWTccbQIE7ISdGwe8/R98Tctt5HEAR9KaPJ8rvP+bmOe9qIB1A
MVKIIVLR7z/rM1n7BNUdQDyaU/sI2O8/nJbi6KB9HkAyf75Qcd3vP4zJBUfs
Ih9AwiC1Hgvi7z/iQSI0QtYfQP8TWc1a5u8/8mdUAc0+IECDZcnw0unvP6ZR
FDB+mSBAuTy1LBDt7z96IyEXh/IgQJrVdsTJ7+8/JADj7pBFIUClgh24+vHv
P4F/IQ6gnyFAYhPCtQb07z+0CRUesPMhQK97xk2r9e8/mjaFdcVOIkDMD6zW
MvfvP59LQoUyqCJAG36lZXv47z96a7SFoPsiQNxrSvqC+e8/CC6jzRNWI0Bt
ANqFePrvP2z7RgaIqiNA+cnDNT377z8yFFD6//8jQLrEV7Do++8/6QLPKw==

                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 10.}, {0., 0.999500603122349}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj4AACDeWCgwPTd0wYnD
3cQ/oIGAyaJtiD/SUFjDa77VP4kl1UUno6c/IqE47Akn4D8R1swMjHa3P9Wb
k3tZVOU/ZG7TADp3wj+7wbiC/fHqPyPk1KgQa8o/gEqXStgX8D8OdpUBagzR
P7tJtw/c7vI/kJBgGJQ01T/ziT6Xnbj1P8U1XDAALtk/2iBupGZS+D+GF5Ri
iLrcP1rNgu1ZJPs/LUDOJRou4D+J0D+8VMb9P/QhGAvpwuE/WwqypoYtAEAF
yAHgAzPjPz63Ng34kwFAk2N8xd2h5D94j482beICQHa3+f4X2uU/f/LaffdM
BEA9U+t87QznPwX2WabgsAVA7PtwDc8b6D/iJK2RzfwGQBVW9v4M/+g/jN7y
ms9kCEBFKd2A09vpP43DDGfVtAlA2f/h76mT6j9bMxlR8CALQAeAhK/AROs/
p0NZHGqGDEAcSU6NUN7rP0t/barn0w1Ajw8E8TJd7D+8RXRWej0PQEyjJ4+2
1uw/wpunYohHEECpr7i5ojrtP+XkrgoD7RBAmzRA4T+R7T9vc69BiKARQI8+
BM3g4+0/pRcaWg9IEkBbTDAshCfuP0EBfgGh/RJAJcn8y7Bn7j8cu3sZ4q8T
QKQpBN6Inu4/oorjEiVWFECHPaToRMvuP4+fRJtyChVAI3hy1J717j8oyg8F
wrIVQLyh1agPGO8/AMV038BXFkC4GX9XoDXvPz4F00jKChdAffiM9ZNR7z8o
W5uT1bEXQIKQt6FBaO8/ePZcbetmGEBGeZHBmn3vP3SniCgDEBlAKbbdyuGO
7z+vKE5UyrUZQHErAVKlne8/Ue8MD5xpGkBOx5PziKvvP5/LNatvERtA/7lk
AMK27z9T7VfWTccbQIE7ISdGwe8/R98Tctt5HEAR9KaPJ8rvP+bmOe9qIB1A
MVKIIVLR7z/rM1n7BNUdQDyaU/sI2O8/nJbi6KB9HkAyf75Qcd3vP4zJBUfs
Ih9AwiC1Hgvi7z/iQSI0QtYfQP8TWc1a5u8/8mdUAc0+IECDZcnw0unvP6ZR
FDB+mSBAuTy1LBDt7z96IyEXh/IgQJrVdsTJ7+8/JADj7pBFIUClgh24+vHv
P4F/IQ6gnyFAYhPCtQb07z+0CRUesPMhQK97xk2r9e8/mjaFdcVOIkDMD6zW
MvfvP59LQoUyqCJAG36lZXv47z96a7SFoPsiQNxrSvqC+e8/CC6jzRNWI0Bt
ANqFePrvP2z7RgaIqiNA+cnDNT377z8yFFD6//8jQLrEV7Do++8/6QLPKw==

                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 10.}, {0., 0.999500603122349}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 10.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"A", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBkQNu/CFib1JlAgAAADgAAAACAAAA8b335Azk6T9e/a1S/JDcP7vBuIL9
8eo/ctwMKLuS2z+ASpdK2BfwP7wp/7lZaNc/u0m3D9zu8j8UpJSoypnTP/OJ
PpeduPU/w92dsll30D/aIG6kZlL4P5hUr9jo/cs/Ws2C7Vkk+z9Fi/536XfH
P4nQP7xUxv0/SDYj22Lowz9bCrKmhi0AQJ8NhmUr8cA/Prc2DfiTAUCaWVaS
lXG8P3iPjzZt4gJAOMEEj3UouD9/8tp990wEQC+cwlQaPbQ/BfZZpuCwBUDL
BPaTmQKxP+IkrZHN/AZAF2o+Ch/urD+M3vKaz2QIQEJg8qo+RKg/jcMMZ9W0
CUDsh93XNJikP1szGVHwIAtA7qw/vno9oT+nQ1kcaoYMQH/XwZcx9Zw/S39t
qufTDUCistdMNZuYP7xFdFZ6PQ9AKOcgzrmflD/Cm6diiEcQQOTpmlpffZE/
5eSuCgPtEEAUZNKShsKNP29zr0GIoBFANUIROGv5iD+lFxpaD0gSQO64N7qG
NIU/QQF+AaH9EkCweMTve8KBPxy7exnirxNAmyjXUTXYfT+iiuMSJVYUQCym
92QtX3k/j59Em3IKFUBNYXh4jUZ1PyjKDwXCshVAc1IDkwcNcj8AxXTfwFcW
QOBtMuKtum4/PgXTSMoKF0Au1Eo2zMxpPyhbm5PVsRdAijm1MKnqZT949lxt
62YYQCOADnw+XWI/dKeIKAMQGUDbj2PvQyNfP68oTlTKtRlAIyAnE897Wj9R
7wwPnGkaQNfGOg3qN1Y/n8s1q28RG0DB/4S8FtxSP1PtV9ZNxxtAmMnmENyU
Tz9H3xNy23kcQPC9SOkvh0o/5uY572ogHUDMnESduItGP+szWfsE1R1AzyvI
x3vmQj+cluLooH0eQAa16n/jB0A/jMkFR+wiH0Cq6AJGSkg7P+JBIjRC1h9A
0fkpFkXmNj/yZ1QBzT4gQM7fAOZlcjM/plEUMH6ZIECiM5jhPUowP3ojIReH
8iBApwNnZEJhKz8kAOPukEUhQOoQ1ozWRyc/gX8hDqCfIUAQv6DPhYYjP7QJ
FR6w8yFAPLUlX7ORID+aNoV1xU4iQGHC+4fYvBs/n0tChTKoIkAsYqlGyUoX
P3prtIWg+yJAFxd1P0PKEz8ILqPNE1YjQKjRHzDUlRA/bPtGBoiqI0CXflhC
XiAMPzIUUPr//yNAVzhMmG7NBz+IfpU0
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 10.}, {0., 0.4463492209833556}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBkQNu/CFib1JlAgAAADgAAAACAAAA8b335Azk6T9e/a1S/JDcP7vBuIL9
8eo/ctwMKLuS2z+ASpdK2BfwP7wp/7lZaNc/u0m3D9zu8j8UpJSoypnTP/OJ
PpeduPU/w92dsll30D/aIG6kZlL4P5hUr9jo/cs/Ws2C7Vkk+z9Fi/536XfH
P4nQP7xUxv0/SDYj22Lowz9bCrKmhi0AQJ8NhmUr8cA/Prc2DfiTAUCaWVaS
lXG8P3iPjzZt4gJAOMEEj3UouD9/8tp990wEQC+cwlQaPbQ/BfZZpuCwBUDL
BPaTmQKxP+IkrZHN/AZAF2o+Ch/urD+M3vKaz2QIQEJg8qo+RKg/jcMMZ9W0
CUDsh93XNJikP1szGVHwIAtA7qw/vno9oT+nQ1kcaoYMQH/XwZcx9Zw/S39t
qufTDUCistdMNZuYP7xFdFZ6PQ9AKOcgzrmflD/Cm6diiEcQQOTpmlpffZE/
5eSuCgPtEEAUZNKShsKNP29zr0GIoBFANUIROGv5iD+lFxpaD0gSQO64N7qG
NIU/QQF+AaH9EkCweMTve8KBPxy7exnirxNAmyjXUTXYfT+iiuMSJVYUQCym
92QtX3k/j59Em3IKFUBNYXh4jUZ1PyjKDwXCshVAc1IDkwcNcj8AxXTfwFcW
QOBtMuKtum4/PgXTSMoKF0Au1Eo2zMxpPyhbm5PVsRdAijm1MKnqZT949lxt
62YYQCOADnw+XWI/dKeIKAMQGUDbj2PvQyNfP68oTlTKtRlAIyAnE897Wj9R
7wwPnGkaQNfGOg3qN1Y/n8s1q28RG0DB/4S8FtxSP1PtV9ZNxxtAmMnmENyU
Tz9H3xNy23kcQPC9SOkvh0o/5uY572ogHUDMnESduItGP+szWfsE1R1AzyvI
x3vmQj+cluLooH0eQAa16n/jB0A/jMkFR+wiH0Cq6AJGSkg7P+JBIjRC1h9A
0fkpFkXmNj/yZ1QBzT4gQM7fAOZlcjM/plEUMH6ZIECiM5jhPUowP3ojIReH
8iBApwNnZEJhKz8kAOPukEUhQOoQ1ozWRyc/gX8hDqCfIUAQv6DPhYYjP7QJ
FR6w8yFAPLUlX7ORID+aNoV1xU4iQGHC+4fYvBs/n0tChTKoIkAsYqlGyUoX
P3prtIWg+yJAFxd1P0PKEz8ILqPNE1YjQKjRHzDUlRA/bPtGBoiqI0CXflhC
XiAMPzIUUPr//yNAVzhMmG7NBz+IfpU0
                    "]]}}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 10.}, {0., 0.4463492209833556}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 10.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.698319249473822*^9, 3.698319258224626*^9}, {
   3.698319374024815*^9, 3.698319393575417*^9}, 3.698319434012897*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"V", "[", "t", "]"}], "/.", "res"}], "]"}], ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "20"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.999", ",", "1.0001"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.698319396405822*^9, 3.69831946731006*^9}, {
  3.6983198163091087`*^9, 3.698319887377664*^9}, {3.6983201762188797`*^9, 
  3.698320188038454*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwVzmlQUwcUBWBAjbKURqCIUAXyXt5jSYuyRJZqrhVZnHRYamyt1IoB1CaQ
BEgpJTqKIGgEBoYii6UMoKIgUspmhWpDgQISlF0BBwqlZRmijA4QBHr9cefM
9+eca3tSEhyup6Oj44v3Lof/SSGVcSxwTDF/pl7U8EoHeiQfnWXB0K9ldRNo
z6ktIMxlgV4Hd9l7ScOL2CQfU6tZ4OoZYqdFW1q3D648ZcEh5i63jcsantp9
R7ddPwti+zpcjNFccUtT4jALXj68w2ChGb0fFHD/Y8F8kGiTP/pGUZ2gUJcA
xlr/99noSa+ljkhXArZbNFfZajW8XAFflb+HgMLDTlYOaL6k6H6bJwE2gtJ4
Z3RNsV+Z7X4CvnWcMzmATtLPS+7/jADpfGeDEE0OesDeUwS0DmWOFaOF0Qm1
RvkE2BNWpttX8D/nF7X2PxEQOslcsUYbLECdTxEBYrOwZxS6SsaoP3+TgBlX
Qbwr+q00s+F1NQEHSpp9A9A5klsPRjoJWM16bn8R3S7u/aNilYBD5V7HJtHX
OVxVuw4J4bIAegYtnctVTW0gQXvw8KwGbS4+3mxjQMKldOGxFfRJ0fSf2eYk
DP21PLL1Le6dWW9TOJGwxjOW7UU7nXJU80NJ2MxmuWWgX5yxltwNIyFka/6F
bPRVsSnT+DQJi8Lo1jz0tGwlqDuKhDs3kzxK0SWKzv4gBQllVxdaG9DbskSj
R66R8PEuw7Qx9Hpj+dyJLhK6z81wHVc1vG4TjqHcgw0ZydyUKvS+yMjpgk/Y
EL64x64GXdlW2abisSEs3ry1Hp2u2J3E9GGDfPPPS7+j+VPc1fJgNlAP+Z5d
6I77+zV/i9gwwU33mka3nPiiN7CQDYkWPpnWaxreg8rEAs4GCjgO0ohUNIMv
sLzGoCBNTz6rRAdN03m6BhQoR0qkGeh/ia6cASYFhl6qhBy0ad62rPM7KRix
78spRYsuVqT2eVDQZDQ+/wht9eWAXCGlQDQIBVp0xJuy11MxFFwi1AfX0L9k
JcQExVFQUZi/oLuu4fl22ciocxQ0t7l8ro+O+VQkfqKkYFLs4WyB7uToCMlb
FEwB9R0XnaDrEPh4lILxdfqKHD3lbThEjVPQdvTJ5Xh0YOrcNxcmKegrL007
iybfvyfhzlJw3Y9ZnIx+/KFrRtESBUcHKtZ/RO9036eONaXBU91aUI9WRQXz
d/jT4J32vGUNzal26Yvj02A40Vqjq/OSl/PGLKQngIbjjdX6G9EixaAo5QgN
o3fHGregza6EKF8JadB6R/uboCNuRHS0nKMhXT9Yj0IbjPzgF1VDg8bS2SEQ
zY27/V5GPQ162rGmYHSoyVDPvd9oKB80FwjQDX5uX796RIOK3J3+1bu+Wo0s
tosGd5tex3A028jH/fZTGmQVyuHT6P8BRZ8swQ==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPbcuic0wZbYdAxh8sGe//Uj9rfxJexh/4an5ha/l
b8L569Z33s7RewXnp9tfnPmm6DOcn/dU8/GWdT/hfC7FFvX7FgwOMH6fwGmt
hQnMcH7S7ZD9zGfY4PzCoy1J+epccP7GAp5gCU9eOH9hdfYrg3ABOL9p/p/A
L28E4XyGyw8c9lQJw/lqJWkVIVqicP6Tr9PDuPeKwfleT7NqJxVKwPl+TyZo
y8lJwfmvDic1nFgrDefrCV6TdY6XhfO57L8m3vksB+e7v436rhSqAOffOJTC
GKWjCOdv7TgSp/AVwU9jLX1w7pwSnJ9cVL2VZ5YynK+frn3OJ1EFzj8vpMNd
aqkK5+9e1zRbh1kNzq9m1Ao4cxfB57pT5ZG3RR3Of7pMccr8Gg04f4qGJMvO
UE04f8KstOOJClpwftSU2HM8zxH8Hy5Lf87fpw3nP37qVHGoXQfOX2RrKH02
URfOX9taKpiuqwfnt4cmezN/RfBN7yxc2X5WH86foTl77VlvAzi//kDvDO+d
CL6vdOjSUyqGcL5j3vFowU4Ef75MksqZrwi+yuHl0/yijRD+0z2kdWkfgp/2
meXiSS1jOD9p4yeFzn4Ef8Ilnt4jxxH8fZ/Vfv7/j+ADAIh78Z8=
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.999},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{910.3203125, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 19.999999591836733`}, {0.999, 1.0001}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.698319429935833*^9, 3.698319467817547*^9}, {
  3.698319819278439*^9, 3.698319874332573*^9}, {3.698320178948723*^9, 
  3.698320188947946*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.697923675390608*^9, 3.697923676307308*^9}, {
  3.698318673046906*^9, 3.698318673821869*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 6", "Chapter",
 CellChangeTimes->{{3.697923681385037*^9, 3.697923684840746*^9}}],

Cell["\<\
Calculo las nullclinas, obtengo dos sistemas de ecuaciones no lineales,\
\>", "Text",
 CellChangeTimes->{{3.697923699574875*^9, 3.697923723299027*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"x", 
          RowBox[{"(", 
           RowBox[{"a", "-", "x"}], ")"}], 
          RowBox[{"(", 
           RowBox[{"x", "-", "1"}], ")"}]}], "+", "Corriente"}], ",", 
        RowBox[{"c", " ", "x"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.2"}], ",", "0.2"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Epilog", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "[", "0.04", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{"a", ",", "Corriente"}], "}"}], "]"}]}], "}"}]}]}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Corriente", ",", 
      RowBox[{"-", "0.1"}], ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"c", ",", "0", ",", "0.2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.697923695181691*^9, {3.697923770993353*^9, 3.6979239011780567`*^9}, {
   3.697923961193507*^9, 3.697923997594843*^9}, {3.697924029580576*^9, 
   3.697924080219224*^9}, {3.697924682998288*^9, 3.697924725480516*^9}, {
   3.698322217279202*^9, 3.6983223250690937`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 
    0.40200000000004366`, $CellContext`c$$ = 0.2, $CellContext`Corriente$$ = 
    0.0059999999999999915`, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0, 1}, {
      Hold[$CellContext`Corriente$$], -0.1, 1}, {
      Hold[$CellContext`c$$], 0, 0.2}}, Typeset`size$$ = {360., {110., 115.}},
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$45036$$ = 0, $CellContext`Corriente$45037$$ = 
    0, $CellContext`c$45038$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 0, $CellContext`c$$ = 
        0, $CellContext`Corriente$$ = -0.1}, "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$45036$$, 0], 
        Hold[$CellContext`Corriente$$, $CellContext`Corriente$45037$$, 0], 
        Hold[$CellContext`c$$, $CellContext`c$45038$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[{$CellContext`x ($CellContext`a$$ - $CellContext`x) \
($CellContext`x - 
           1) + $CellContext`Corriente$$, $CellContext`c$$ $CellContext`x}, \
{$CellContext`x, -1, 2}, PlotRange -> {{-1, 2}, {-0.2, 0.2}}, Epilog -> {
          PointSize[0.04], 
          Point[{$CellContext`a$$, $CellContext`Corriente$$}]}], 
      "Specifications" :> {{$CellContext`a$$, 0, 
         1}, {$CellContext`Corriente$$, -0.1, 1}, {$CellContext`c$$, 0, 0.2}},
       "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{405., {210., 216.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.697923901789446*^9, {3.697923988240157*^9, 3.6979239980893393`*^9}, {
   3.697924054754652*^9, 3.697924080764676*^9}, {3.697924689456111*^9, 
   3.697924726070956*^9}, {3.6983222371404943`*^9, 3.69832232572022*^9}}]
}, Open  ]],

Cell[TextData[{
 "En la figura de arriba aparecen graficadas la nulclina amarilla, la cual es \
lineal y la nulclina azul la cual es cubica, se puede ver como al variar la \
corriente aparecen diferentes puntos fijos.\nFijando a = 0.402 y c= ",
 Cell[BoxData[
  FormBox[
   FractionBox["b", "\[Gamma]"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "=1 se obienen los siguientes puntos fijos en funcion de la corriente\n"
}], "Text",
 CellChangeTimes->{{3.698322808582972*^9, 3.69832294961173*^9}, {
  3.698323277009939*^9, 3.698323304026417*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", 
     RowBox[{"c", "=", "0.1"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", "x_", "]"}], ":=", 
       RowBox[{"x", 
        RowBox[{"(", 
         RowBox[{"a", "-", "x"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"x", "-", "1"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"x", "/.", 
         RowBox[{"Solve", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", "x", "]"}], "+", "Corriente"}], "\[Equal]", 
            RowBox[{"c", " ", "x"}]}], ",", "x"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"Corriente", ",", 
          RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", "Automatic"}]}], "]"}]}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.698322954008477*^9, 3.698323056974494*^9}, {
  3.698323159740059*^9, 3.698323265889577*^9}, {3.6983233174051123`*^9, 
  3.6983233752569323`*^9}, {3.6983237335882483`*^9, 3.698323735627097*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$486505$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$486505$$], 0, 1}}, Typeset`size$$ = {
    360., {93., 97.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`a$486505$486506$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$486505$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$486505$$, $CellContext`a$486505$486506$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ($CellContext`f[
          Pattern[$CellContext`x$, 
           
           Blank[]]] := $CellContext`x$ ($CellContext`a$486505$$ - \
$CellContext`x$) ($CellContext`x$ - 1); Plot[
         ReplaceAll[$CellContext`x, 
          
          Solve[$CellContext`f[$CellContext`x] + $CellContext`Corriente == \
$CellContext`c$486505 $CellContext`x, $CellContext`x]], \
{$CellContext`Corriente, -0.1, 0.1}, AxesLabel -> Automatic]), 
      "Specifications" :> {{$CellContext`a$486505$$, 0, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{405., {138., 144.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.6983230448175497`*^9, 3.698323058001554*^9}, {
  3.698323162892119*^9, 3.698323215084248*^9}, {3.698323247904736*^9, 
  3.698323266709568*^9}, {3.698323324986133*^9, 3.69832337687204*^9}, {
  3.698323737819745*^9, 3.6983237490795803`*^9}}]
}, Open  ]],

Cell[TextData[{
 "Si el parametro ",
 Cell[BoxData[
  FormBox[
   RowBox[{"c", "=", 
    FractionBox["b", "\[Gamma]"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " es muy grande la curva se hace mas plana y solo aparece un punto fijo todo \
el tiempo.\[AliasDelimiter]"
}], "Text",
 CellChangeTimes->{{3.698323412261648*^9, 3.698323468619823*^9}, 
   3.698323533590294*^9}],

Cell["Si definimos las funciones F[V,w] y G[V,w] como", "Text",
 CellChangeTimes->{{3.6983236853380823`*^9, 3.69832372586423*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "V_", "]"}], ":=", 
   RowBox[{"V", 
    RowBox[{"(", 
     RowBox[{"a", "-", "V"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"V", "-", "2"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"F", "[", 
   RowBox[{"V_", ",", "w_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"f", "[", "V", "]"}], "+", " ", "currnt", " ", "-", " ", 
   "w"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", "[", 
   RowBox[{"V_", ",", "w_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "\[Gamma]"}], " ", "w"}], "+", 
   RowBox[{"b", " ", "V"}]}]}]}], "Input",
 CellChangeTimes->{{3.6983237551419163`*^9, 3.698323778265511*^9}, {
  3.698323827965932*^9, 3.698323837513726*^9}}],

Cell["Podemos escribir la matriz jacobiana como", "Text",
 CellChangeTimes->{{3.6983238395134287`*^9, 3.698323858878748*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"jacMatrix", "[", 
    RowBox[{"V_", ",", "w_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"2", " ", "a", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "V"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"4", "-", 
            RowBox[{"3", " ", "V"}]}], ")"}], " ", "V"}]}], ",", 
        RowBox[{"-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"b", ",", 
        RowBox[{"-", "\[Gamma]"}]}], "}"}]}], "}"}], "//", "FullSimplify"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"jacMatrix", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.6983238634889517`*^9, 3.69832397249902*^9}, {
  3.6983242123320723`*^9, 3.698324224022485*^9}, {3.69832431885896*^9, 
  3.6983243190707693`*^9}, {3.698324426638773*^9, 3.698324552102593*^9}}],

Cell[BoxData[
 TemplateBox[{
  "SetDelayed","write",
   "\"Tag \\!\\(\\*RowBox[{\\\"List\\\"}]\\) in \
\\!\\(\\*RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{RowBox[{\\\"(\\\", RowBox[{\\\"a\\\", \\\"-\\\", \
\\\"V\\\"}], \\\")\\\"}], \\\" \\\", RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"-\
\\\", \\\"2\\\"}], \\\"+\\\", \\\"V\\\"}], \\\")\\\"}]}], \\\"+\\\", \
RowBox[{RowBox[{\\\"(\\\", RowBox[{\\\"a\\\", \\\"-\\\", \\\"V\\\"}], \\\")\\\
\"}], \\\" \\\", \\\"V\\\"}], \\\"-\\\", RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"2\\\"}], \\\"+\\\", \\\"V\\\"}], \\\")\\\"}], \
\\\" \\\", \\\"V\\\"}]}], \\\",\\\", RowBox[{\\\"-\\\", \\\"1\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"b\\\", \\\",\\\", \
RowBox[{\\\"-\\\", \\\"\[Gamma]\\\"}]}], \\\"}\\\"}]}], \\\"}\\\"}], \
\\\"[\\\", RowBox[{\\\"V_\\\", \\\",\\\", \\\"w_\\\"}], \\\"]\\\"}]\\) is \
Protected.\"",2,152,51,26797140356002221886,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.698324513354184*^9, 3.698324553244597*^9, 
  3.698324656124111*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"a", "-", "V"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "V"}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"a", "-", "V"}], ")"}], " ", "V"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "V"}], ")"}], " ", "V"}]}], 
      RowBox[{"-", "1"}]},
     {"b", 
      RowBox[{"-", "\[Gamma]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.698324513364544*^9, 3.698324553285923*^9, 
  3.698324656174205*^9}]
}, Open  ]],

Cell["Usando esta matriz podemos graficar el campo vectorial como", "Text",
 CellChangeTimes->{{3.698323985433406*^9, 3.698324003914833*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"vectorField", "[", 
   RowBox[{"V_", ",", "w_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "a", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "V"}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"4", "-", 
          RowBox[{"3", " ", "V"}]}], ")"}], " ", "V"}]}], ")"}], "*", "V"}], 
    ",", 
    RowBox[{
     RowBox[{"b", " ", "V"}], " ", "-", " ", 
     RowBox[{"\[Gamma]", " ", "w"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.698324004960662*^9, 3.698324021931199*^9}, {
  3.6983240524113417`*^9, 3.6983240699346933`*^9}, {3.698324240232354*^9, 
  3.698324242140093*^9}, {3.6983247086549177`*^9, 3.698324727038389*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"vectorField", "[", 
      RowBox[{"V_", ",", "w_"}], "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "a", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "V"}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"4", "-", 
             RowBox[{"3", " ", "V"}]}], ")"}], " ", "V"}]}], ")"}], "*", 
        "V"}], ",", 
       RowBox[{
        RowBox[{"b", " ", "V"}], " ", "-", " ", 
        RowBox[{"\[Gamma]", " ", "w"}]}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"VectorPlot", "[", 
     RowBox[{
      RowBox[{"vectorField", "[", 
       RowBox[{"x", ",", "y"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Gamma]", ",", "100", ",", "200"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6983240834868393`*^9, 3.698324164344219*^9}, {
  3.698324784115893*^9, 3.6983248721761293`*^9}, {3.698324937762279*^9, 
  3.698325073577415*^9}, {3.698325111969212*^9, 3.69832512704134*^9}, {
  3.698325170077477*^9, 3.698325179668927*^9}, {3.698325259000483*^9, 
  3.698325363513756*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 0, $CellContext`b$$ = 
    0, $CellContext`\[Gamma]$$ = 100, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0, 1}, {
      Hold[$CellContext`b$$], 0, 1}, {
      Hold[$CellContext`\[Gamma]$$], 100, 200}}, Typeset`size$$ = {
    259.2, {129., 130.0505859375}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`a$801121$$ = 
    0, $CellContext`b$801122$$ = 0, $CellContext`\[Gamma]$801123$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 0, $CellContext`b$$ = 
        0, $CellContext`\[Gamma]$$ = 100}, "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$801121$$, 0], 
        Hold[$CellContext`b$$, $CellContext`b$801122$$, 0], 
        Hold[$CellContext`\[Gamma]$$, $CellContext`\[Gamma]$801123$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ($CellContext`vectorField[
          Pattern[$CellContext`V$, 
           Blank[]], 
          Pattern[$CellContext`w$, 
           Blank[]]] := {(
           2 $CellContext`a$$ (-1 + $CellContext`V$) + (4 - 
             3 $CellContext`V$) $CellContext`V$) $CellContext`V$, \
$CellContext`b$$ $CellContext`V$ - $CellContext`\[Gamma]$$ $CellContext`w$}; 
       VectorPlot[
         $CellContext`vectorField[$CellContext`x, $CellContext`y], \
{$CellContext`x, -2, 2}, {$CellContext`y, -2, 2}]), 
      "Specifications" :> {{$CellContext`a$$, 0, 1}, {$CellContext`b$$, 0, 
         1}, {$CellContext`\[Gamma]$$, 100, 200}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{296., {205., 208.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.698324872643659*^9, {3.6983249142279253`*^9, 3.698324965933169*^9}, {
   3.698325027152227*^9, 3.698325127762454*^9}, {3.6983251756639977`*^9, 
   3.6983251804984417`*^9}, {3.698325275794365*^9, 3.6983253643038397`*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6983234091033773`*^9, 3.6983234108768673`*^9}, {
  3.698323554459366*^9, 3.698323575087249*^9}, {3.698323683027128*^9, 
  3.698323684143126*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6979215851108837`*^9, 3.6979215854388733`*^9}, 
   3.697924607358953*^9, 3.698322975331829*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.697924588696097*^9, 3.6979246065983753`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.697921346231773*^9, 3.69792134746621*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6979212742169657`*^9, 3.697921275125*^9}}]
}, Open  ]]
}, Open  ]],

Cell["", "Title",
 CellChangeTimes->{{3.697921059826754*^9, 3.697921060349617*^9}, {
  3.6979243804716063`*^9, 3.697924380927516*^9}}]
},
WindowToolbars->"EditBar",
WindowSize->{1440, 734},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
DockedCells->{},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
TaggingRules->{"NotebookTemplateVersion" -> 1., "NotebookTemplate" -> True},
CellContext->Notebook,
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 28, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 4046, 109, 196, "Input",
 InitializationCell->True],
Cell[4607, 131, 92, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[4724, 136, 110, 1, 92, "Title"],
Cell[CellGroupData[{
Cell[4859, 141, 151, 2, 32, "Input"],
Cell[5013, 145, 420, 8, 24, "Message"],
Cell[5436, 155, 616, 11, 24, "Message"],
Cell[6055, 168, 610, 11, 24, "Message"]
}, Open  ]],
Cell[6680, 182, 231, 5, 32, "Input"],
Cell[CellGroupData[{
Cell[6936, 191, 148, 2, 65, "Chapter"],
Cell[7087, 195, 191, 5, 49, "Text"],
Cell[7281, 202, 117, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[7423, 207, 225, 6, 32, "Input"],
Cell[7651, 215, 102, 1, 32, "Output"]
}, Open  ]],
Cell[7768, 219, 629, 13, 32, "Input"],
Cell[8400, 234, 715, 17, 32, "Input"],
Cell[CellGroupData[{
Cell[9140, 255, 495, 13, 32, "Input"],
Cell[9638, 270, 449, 10, 35, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10136, 286, 126, 2, 65, "Chapter"],
Cell[10265, 290, 788, 20, 55, "Text"],
Cell[CellGroupData[{
Cell[11078, 314, 955, 24, 180, "Input"],
Cell[12036, 340, 116, 1, 32, "Output"]
}, Open  ]],
Cell[12167, 344, 164, 3, 30, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12368, 352, 145, 2, 65, "Chapter"],
Cell[12516, 356, 142, 1, 30, "Text"],
Cell[12661, 359, 2128, 73, 231, "Input"],
Cell[14792, 434, 2095, 73, 138, "Input"],
Cell[16890, 509, 116, 1, 30, "Text"],
Cell[17009, 512, 1087, 29, 180, "Input"],
Cell[18099, 543, 425, 7, 30, "Text"],
Cell[18527, 552, 11298, 254, 501, "Input"],
Cell[CellGroupData[{
Cell[29850, 810, 786, 15, 54, "Input"],
Cell[30639, 827, 7674, 138, 381, "Output"]
}, Open  ]],
Cell[38328, 968, 96, 1, 32, "Input"],
Cell[38427, 971, 450, 10, 68, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38914, 986, 98, 1, 65, "Chapter"],
Cell[39015, 989, 108, 1, 30, "Text"],
Cell[39126, 992, 133, 2, 32, "Input"],
Cell[39262, 996, 115, 1, 30, "Text"],
Cell[39380, 999, 3591, 102, 163, "Input"],
Cell[CellGroupData[{
Cell[42996, 1105, 94, 1, 32, "Input"],
Cell[43093, 1108, 417, 8, 24, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43547, 1121, 458, 11, 32, "Input"],
Cell[44008, 1134, 22588, 384, 232, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66633, 1523, 14930, 259, 232, "Input"],
Cell[81566, 1784, 14931, 259, 232, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96534, 2048, 404, 10, 32, "Input"],
Cell[96941, 2060, 23252, 395, 237, "Output"]
}, Open  ]],
Cell[120208, 2458, 299, 6, 30, "Text"],
Cell[120510, 2466, 456, 13, 32, "Input"],
Cell[CellGroupData[{
Cell[120991, 2483, 491, 12, 32, "Input"],
Cell[121485, 2497, 3377, 72, 317, "Output"]
}, Open  ]],
Cell[124877, 2572, 138, 1, 30, "Text"],
Cell[125018, 2575, 3302, 92, 121, "Input"],
Cell[CellGroupData[{
Cell[128345, 2671, 591, 14, 32, "Input"],
Cell[128939, 2687, 34164, 607, 386, "Output"]
}, Open  ]],
Cell[163118, 3297, 526, 12, 73, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163681, 3314, 148, 2, 65, "Chapter"],
Cell[163832, 3318, 304, 8, 75, "Input"],
Cell[CellGroupData[{
Cell[164161, 3330, 1142, 32, 32, InheritFromParent],
Cell[165306, 3364, 27643, 537, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[192986, 3906, 569, 16, 32, "Input"],
Cell[193558, 3924, 3841, 76, 584, "Output"]
}, Open  ]],
Cell[197414, 4003, 141, 2, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197592, 4010, 96, 1, 65, "Chapter"],
Cell[197691, 4013, 161, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[197877, 4020, 1630, 46, 75, "Input"],
Cell[199510, 4068, 2592, 50, 443, "Output"]
}, Open  ]],
Cell[202117, 4121, 556, 11, 79, "Text"],
Cell[CellGroupData[{
Cell[202698, 4136, 1316, 34, 117, "Input"],
Cell[204017, 4172, 2220, 44, 299, "Output"]
}, Open  ]],
Cell[206252, 4219, 386, 11, 41, "Text"],
Cell[206641, 4232, 130, 1, 30, "Text"],
Cell[206774, 4235, 720, 23, 75, "Input"],
Cell[207497, 4260, 125, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[207647, 4265, 957, 27, 54, "Input"],
Cell[208607, 4294, 1099, 18, 24, "Message"],
Cell[209709, 4314, 1134, 35, 60, "Output"]
}, Open  ]],
Cell[210858, 4352, 141, 1, 30, "Text"],
Cell[211002, 4355, 795, 23, 32, "Input"],
Cell[CellGroupData[{
Cell[211822, 4382, 1616, 45, 75, "Input"],
Cell[213441, 4429, 2724, 53, 607, "Output"]
}, Open  ]],
Cell[216180, 4485, 194, 3, 32, "Input"],
Cell[216377, 4490, 144, 2, 32, "Input"],
Cell[216524, 4494, 94, 1, 32, "Input"],
Cell[216621, 4497, 91, 1, 32, "Input"],
Cell[216715, 4500, 91, 1, 32, "Input"]
}, Open  ]]
}, Open  ]],
Cell[216833, 4505, 134, 2, 92, "Title"]
}
]
*)

